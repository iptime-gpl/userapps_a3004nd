CFLAGS := -I$(USERAPPS_ROOT)/include -Wall -Wshadow -Os -fstrict-aliasing -fomit-frame-pointer -DARCH_TIME -D__SIZE_OPTI__

ifeq ($(USE_RTL3_TREE),y)
CFLAGS += -fPIC
endif

ifeq ($(USE_MTK_GCC463),y)
CFLAGS += -fPIC
endif


ifeq ($(USE_MTK_GCC483),y)
CFLAGS := -I$(USERAPPS_ROOT)/include -Wall -Wshadow -fstrict-aliasing -fomit-frame-pointer -DARCH_TIME -D__SIZE_OPTI__ -mcpu=cortex-a7 -O2 -fomit-frame-pointer -pipe -Os
endif

ifeq ($(USE_QCA_GCC463),y)
CFLAGS := -DARCH_TIME -I$(USERAPPS_ROOT)/include -Wall -Wshadow -fno-builtin-strlen -finline-limit=0 -fomit-frame-pointer -ffunction-sections -fdata-sections -fno-guess-branch-probability -funsigned-char -falign-functions=1 -falign-jumps=1 -falign-labels=1 -falign-loops=1 -Os  -Os -pipe -mips32r2 -mtune=74kc -fno-caller-saves -freorder-blocks -fstack-protector -Wl,-z,relro,-z,now -fhonour-copts -Wno-error=unused-but-set-variable -msoft-float -fPIC
endif


ifeq ($(USE_NEW_LIB),y)
CFLAGS += -I$(USERAPPS_ROOT)/lib
else
CFLAGS += -I$(USERAPPS_ROOT)/cgi-src/lib
endif

ifeq ($(USE_QCA),y)
CFLAGS += -DUSE_QCA=1
endif

ifeq ($(USE_QCAG),y)
CFLAGS += -DUSE_QCAG=1
endif

ifeq ($(USE_QCA_ART),y)
CFLAGS += -DUSE_QCA_ART=1
endif

ifeq ($(USE_QCA_ART_DOWNLOAD),y)
CFLAGS += -DUSE_QCA_ART_DOWNLOAD=1
endif

ifeq ($(USE_BCM5354),y)

ifeq ($(BRCM_SDK_VERSION),9.10.178.27)
BROADCOM_SDK_PATH:=/home/bcmac/broadcom_sdk/bcm_$(BRCM_SDK_VERSION)
CFLAGS += -I$(BROADCOM_SDK_PATH)/main/components/router/shared -I$(BROADCOM_SDK_PATH)/main/src/include -I$(BROADCOM_SDK_PATH)/main/components/shared -I$(BROADCOM_SDK_PATH)/main/components/shared/devctrl_if -I$(BROADCOM_SDK_PATH)/main/src/wl/proxd/src -I$(BROADCOM_SDK_PATH)/main/src/wl/proxd/include -I$(BROADCOM_SDK_PATH)/main/src/../components/shared -I$(BROADCOM_SDK_PATH)/main/src/common/include -I$(BROADCOM_SDK_PATH)/main/src/shared/bcmwifi/include -I$(BROADCOM_SDK_PATH)/main/src/wl/clm/include
else

ifeq ($(BRCM_SDK_VERSION),9.10.178.50)
BROADCOM_SDK_PATH:=/home/bcmac/broadcom_sdk/bcm_$(BRCM_SDK_VERSION).fsrc
CFLAGS += -I$(BROADCOM_SDK_PATH)/main/components/router/shared -I$(BROADCOM_SDK_PATH)/main/src/include -I$(BROADCOM_SDK_PATH)/main/components/shared -I$(BROADCOM_SDK_PATH)/main/components/shared/devctrl_if -I$(BROADCOM_SDK_PATH)/main/src/wl/proxd/src -I$(BROADCOM_SDK_PATH)/main/src/wl/proxd/include -I$(BROADCOM_SDK_PATH)/main/src/../components/shared -I$(BROADCOM_SDK_PATH)/main/src/common/include -I$(BROADCOM_SDK_PATH)/main/src/shared/bcmwifi/include -I$(BROADCOM_SDK_PATH)/main/src/wl/clm/include
else
CFLAGS += -I$(USERAPPS_ROOT)/bcmapp/include
endif
endif

ifneq ($(USE_BCM470X),y)
CFLAGS += -DSIZE_OPTI_L3=1
SIZE_OPTI_L3:=y
endif
endif
ifeq ($(USE_RT288X),y)
CFLAGS += -I$(USERAPPS_ROOT)/rt288x_app/include
ifneq ($(USE_MT7623),y)
CFLAGS += -DSIZE_OPTI_L3=1
SIZE_OPTI_L3:=y
endif
endif

ifeq ($(USE_RT6856),y)
CFLAGS += -DUSE_RT6856=1
endif

ifeq ($(USE_MT7615),y)
CFLAGS += -DUSE_MT7615=1
endif

ifeq ($(USE_MT7620),y)
CFLAGS += -DUSE_MT7620=1
endif

ifeq ($(USE_MT7621),y)
CFLAGS += -DUSE_MT7621=1
# In rtl_wifi 3.0.4.0 , auto reconnect doesn't work
ifeq ($(USE_MTK_SDK_5020),y)
CFLAGS += -DUSE_MTK_APCLI_AUTO_RECONNECT_SUPPORT=1
endif
endif

ifeq ($(USE_MT7623),y)
CFLAGS += -DUSE_MT7623=1
CFLAGS += -DUSE_MTK_APCLI_AUTO_RECONNECT_SUPPORT=1
endif

ifeq ($(USE_MT7628),y)
CFLAGS += -DUSE_MT7628=1
CFLAGS += -DUSE_MTK_APCLI_AUTO_RECONNECT_SUPPORT=1
endif



ifeq ($(USE_MT7530_SWITCH),y)
CFLAGS += -DUSE_MT7530_SWITCH=1
endif

ifeq ($(USE_BCM5358),y)
CFLAGS += -DUSE_BCM5358=1
CFLAGS += -I$(USERAPPS_ROOT)/bcmapp/include
endif


ifeq ($(USE_BCM470X),y)
CFLAGS += -DUSE_BCM5358=1 -DUSE_BCM470X
CFLAGS += -I$(USERAPPS_ROOT)/bcmapp/include -I$(USERAPPS_ROOT)/bcmapp/sdk/$(BRCM_SDK_VERSION)/shared/bcmwifi/include
CFLAGS += -DUSE_NEW_ROBORD=1
endif

ifeq ($(USE_BCM47189),y)
CFLAGS += -DUSE_BCM47189=1
endif


ifeq ($(USE_BCM470X_V2),y)
CFLAGS += -DUSE_BCM470X_V2=1
endif

ifeq ($(USE_IP3210),y)
CFLAGS += -I$(USERAPPS_ROOT)/ip3210_app/include
CFLAGS += -DUSE_IP3210=1
endif

ifeq ($(USE_RTL8196B),y)
CFLAGS += -I$(USERAPPS_ROOT)/rtl_app/include
CFLAGS += -DUSE_RTL8196B=1
endif

ifeq ($(USE_RTL8196C),y)
CFLAGS += -DUSE_RTL8196C=1
endif

ifeq ($(USE_RTL8198),y)
CFLAGS += -DUSE_RTL8198=1
endif
ifeq ($(USE_RTL8196C_92D),y)
CFLAGS += -DUSE_RTL8196C_92D=1
endif
ifeq ($(USE_RTL8196C_92C),y)
CFLAGS += -DUSE_RTL8196C_92C=1
endif

ifeq ($(USE_RTL8197D_8192D),y)
CFLAGS += -DUSE_RTL8197D_8192D=1
endif

ifeq ($(USE_RTL8196D_8192D),y)
CFLAGS += -DUSE_RTL8196D_8192D=1
endif

ifeq ($(USE_RTL8196E),y)
CFLAGS += -DUSE_RTL8196E=1
endif

ifeq ($(USE_MV6281),y)
CFLAGS += -I$(USERAPPS_ROOT)/mv6281_app/include
CFLAGS += -DUSE_MV6281=1
endif

ifeq ($(USE_RTL8881A),y)
CFLAGS += -DUSE_RTL8881A=1
endif



ifeq ($(USE_MV98DX316),y)
CFLAGS += -DUSE_MV98DX316=1
endif

ifeq ($(USE_MV98DX324),y)
CFLAGS += -DUSE_MV98DX324=1
endif

LDFLAGS := -s -Wl,-warn-common

LIBINCLUDE := $(USERAPPS_ROOT)/include/lib

ifeq ($(ARCH_TIMEPRO),y)
CFLAGS += -DARCH_TIMEPRO
CFLAGS += -DUSE_TIMEPRO_CGI_MENU=1
endif

ifeq ($(ARCH_TIMEPROV),y)
CFLAGS += -DARCH_TIMEPROV
CFLAGS += -DUSE_TIMEV_CGI_MENU=1
endif

ifeq ($(ARCH_TIMEAIR),y)
CFLAGS += -DARCH_TIMEAIR
CFLAGS += -DUSE_TIMEAIR_CGI_MENU=1
endif

ifeq ($(ARCH_TIMENV),y)
CFLAGS += -DARCH_TIMENV
endif

ifeq ($(ARCH_TIMEVQ),y)
CFLAGS += -DARCH_TIMEVQ
endif

ifeq ($(ARCH_NETMAN),y)
CFLAGS += -DARCH_NETMAN
endif

ifeq ($(ARCH_TIMEZION),y)
CFLAGS += -DARCH_TIMEZION
CFLAGS += -DUSE_TIMEV_CGI_MENU=1
endif


ifeq ($(ARCH_NEWZION2),y)
CFLAGS += -DARCH_NEWZION2
endif


ifeq ($(ARCH_TIMEZIONW),y)
CFLAGS += -DARCH_TIMEZIONW
endif

ifeq ($(ARCH_TIMEWLNZION),y)
CFLAGS += -DARCH_TIMEWLNZION
endif

ifeq ($(ARCH_HAIER),y)
CFLAGS += -DARCH_HAIER
endif

ifeq ($(ARCH_TIMEHS),y)
CFLAGS += -DARCH_TIMEHS
endif

ifeq ($(ARCH_TIMEQOS),y)
CFLAGS += -DARCH_TIMEQOS
endif

ifeq ($(ARCH_TIMEQ),y)
CFLAGS += -DARCH_TIMEQ
endif

ifeq ($(ARCH_TIME2WAN),y)
CFLAGS += -DARCH_TIME2WAN
endif

ifeq ($(ARCH_TIMEIIE),y)
CFLAGS += -DARCH_TIMEIIE
endif

ifeq ($(ARCH_W2ZION),y)
CFLAGS += -DARCH_W2ZION
endif

ifeq ($(ARCH_TIMEZB),y)
CFLAGS += -DARCH_TIMEZB
endif

ifeq ($(ARCH_TIMEAP),y)
CFLAGS += -DARCH_TIMEAP
endif

ifeq ($(ARCH_IXPW2ZION),y)
CFLAGS += -DARCH_IXPW2ZION
endif

ifeq ($(SIZE_OPTI2),y)
CFLAGS += -D__SIZE_OPTI2__
endif

ifeq ($(USE_QOS),y)
CFLAGS += -DUSE_QOS=1
endif

ifeq ($(USE_SMART_QOS),y)
CFLAGS += -DUSE_SMART_QOS=1
endif

ifeq ($(USE_QOS_NEWDB),y)
CFLAGS += -DUSE_QOS_NEWDB=1
endif

ifeq ($(QOS_EXTENDED_CLASS),y)
CFLAGS += -DQOS_EXTENDED_CLASS=1
endif

ifeq ($(USE_MSSID_QOS),y)
CFLAGS += -DUSE_MSSID_QOS=1
endif

ifeq ($(USE_NOT_NAT_MENU),y)
CFLAGS += -DUSE_NOT_NAT_MENU=1
endif

ifeq ($(USE_NOT_EXPERT_MENU),y)
CFLAGS += -DUSE_NOT_EXPERT_MENU=1
endif

ifeq ($(USE_PPTPVPN),y)
CFLAGS += -DUSE_PPTPVPN=1
CFLAGS += -DUSE_PPPINFO=1
endif

ifeq ($(SAVEFS_MINIX_USE),y)
CFLAGS += -DSAVEFS_MINIX_USE=1
endif

ifeq ($(SAVEFS_EXT2_USE),y)
CFLAGS += -DSAVEFS_EXT2_USE=1
endif

ifeq ($(KEEPALIVE_CONNECTION),y)
CFLAGS += -DKEEPALIVE_CONNECTION=1
endif

ifeq ($(KS8695_TX_WORKAROUND),y)
CFLAGS += -DKS8695_TX_WORKAROUND=1
endif

ifeq ($(USE_CONFIG_WIZARD),y)
CFLAGS += -DUSE_CONFIG_WIZARD=1
endif

ifeq ($(USE_CONFIG_WIRELESSWIZARD),y)
CFLAGS += -DUSE_CONFIG_WIRELESSWIZARD=1
endif

ifeq ($(USE_LANCARD_WIRELESSWIZARD),y)
CFLAGS += -DUSE_LANCARD_WIRELESSWIZARD=1
endif



ifeq ($(USE_TELNETD),y)
# debug telnet port is 10000
CFLAGS += -DUSE_TELNETD=1
endif

ifeq ($(ROUTE_MANAGEMENT),y)
CFLAGS += -DROUTE_MANAGEMENT=1
endif

ifeq ($(USE_ISL3890),y)
CFLAGS += -DUSE_ISL3890=1
endif

ifeq ($(USE_WIRELESS_CGI),y)
CFLAGS += -DUSE_WIRELESS_CGI=1
endif

ifeq ($(USE_DRVLEVEL_PACKET_FORWARD),y)
CFLAGS += -DUSE_DRVLEVEL_PACKET_FORWARD=1
endif

ifeq ($(USE_WIRELESSTOOLS),y)
CFLAGS += -DUSE_WIRELESSTOOLS=1
endif

ifeq ($(USE_BRIDGE),y)
CFLAGS += -DUSE_BRIDGE=1
endif

ifeq ($(USE_INTERNET_SCHED),y)
CFLAGS += -DUSE_INTERNET_SCHED=1
endif

ifeq ($(KOREAN_SUPPORT),y)
CFLAGS += -DKOREAN_SUPPORT=1
endif

ifeq ($(JAPAN_SUPPORT),y)
CFLAGS += -DJAPAN_SUPPORT=1
endif

ifeq ($(FRENCH_SUPPORT),y)
CFLAGS += -DFRENCH_SUPPORT=1
endif

ifeq ($(C304_SUPPORT),y)
CFLAGS += -DC304_SUPPORT=1
endif

ifeq ($(ENGLISH_SUPPORT),y)
CFLAGS += -DENGLISH_SUPPORT=1
endif

ifeq ($(RUSSIAN_SUPPORT),y)
CFLAGS += -DRUSSIAN_SUPPORT=1
endif

ifeq ($(CHINESE_SUPPORT),y)
CFLAGS += -DCHINESE_SUPPORT=1
endif

ifeq ($(CHINEXE_SUPPORT),y)
CFLAGS += -DCHINEXE_SUPPORT=1
endif

ifeq ($(PORTUGUESE_SUPPORT),y)
CFLAGS += -DPORTUGUESE_SUPPORT=1
endif

ifeq ($(VIETNAMESE_SUPPORT),y)
CFLAGS += -DVIETNAMESE_SUPPORT=1
endif

ifeq ($(USE_RESET_BUTTON),y)
CFLAGS += -DUSE_RESET_BUTTON=1
endif

ifeq ($(USE_DEFAULT_BUTTON),y)
CFLAGS += -DUSE_DEFAULT_BUTTON=1
endif

ifeq ($(USE_DEFAULT_IP),y)
CFLAGS += -DUSE_DEFAULT_IP=1
endif

ifeq ($(USE_AUTH),y)
CFLAGS += -DUSE_AUTH=1
endif

ifeq ($(USE_NEW_TIMED),y)
CFLAGS += -DUSE_NEW_TIMED=1
endif

ifeq ($(USE_PPPOE_IDLE_TIMEOUT),y)
CFLAGS += -DUSE_PPPOE_IDLE_TIMEOUT=1
endif

ifeq ($(USE_OLD_NETCONF_INTERFACE),y)
CFLAGS += -DUSE_OLD_NETCONF_INTERFACE=1
endif

ifeq ($(USE_LOGIX_CGI),y)
CFLAGS += -DUSE_LOGIX_CGI=1
endif

ifeq ($(USE_PUBLIC_IP_FROM_LOCAL),y)
CFLAGS += -DUSE_PUBLIC_IP_FROM_LOCAL=1
endif

ifeq ($(USE_TEXT_SUBTITLE),y)
CFLAGS += -DUSE_TEXT_SUBTITLE=1
endif

ifeq ($(USE_VERTICAL_MENU),y)
CFLAGS += -DUSE_VERTICAL_MENU=1
endif

ifeq ($(USE_IPTIME_DIET_CGI),y)
CFLAGS += -DUSE_IPTIME_DIET_CGI=1
endif

ifeq ($(USE_REAL_IPCLONE),y)
CFLAGS += -DUSE_REAL_IPCLONE=1
endif

ifeq ($(USE_TWINIP_FAKEIP),y)
CFLAGS += -DUSE_TWINIP_FAKEIP=1
endif

ifeq ($(USE_NO_LOGINPAGE_SUPPORT),y)
CFLAGS += -DUSE_NO_LOGINPAGE_SUPPORT=1
endif

ifeq ($(USE_IPTIME_DIET_CGI),y)
CFLAGS += -DUSE_IPTIME_DIET_CGI=1
endif

#CFLAGS += -DCOMPANY_NAME=$(COMPANY_NAME)
#CFLAGS += -DMODEL_NAME=$(MODEL_NAME)
#CFLAGS += -DCOMPANY_HOME_URL=$(COMPANY_HOME_URL)
#CFLAGS += -DPRODUCT_ID=\"$(PRODUCT_ID)\"

ifeq ($(USE_PORT_TRIGGER),y)
CFLAGS += -DUSE_PORT_TRIGGER=1
endif

ifeq ($(USE_PORT_TRIGGER_NOQUEUE),y)
CFLAGS += -DUSE_PORT_TRIGGER_NOQUEUE=1
endif

ifeq ($(USE_DHCPCLIENT_BLOCK_PRIVATE_IP_SERVER),y)
CFLAGS += -DUSE_DHCPCLIENT_BLOCK_PRIVATE_IP_SERVER=1
endif

ifeq ($(USE_WEB_CUSTOMIZE_TOOL),y)
CFLAGS += -DUSE_WEB_CUSTOMIZE_TOOL=1
endif

ifeq ($(USE_MODEM_AUTO_DETECT_WIZARD),y)
CFLAGS += -DUSE_MODEM_AUTO_DETECT_WIZARD=1
endif

ifeq ($(USE_PROXY_DNS),y) 
CFLAGS += -DUSE_PROXY_DNS=1
endif

ifeq ($(USE_EMBEDDED_HELP),y)
CFLAGS += -DUSE_EMBEDDED_HELP=1
endif

ifeq ($(USE_NEW_UPGRADE_METHOD),y)
CFLAGS += -DUSE_NEW_UPGRADE_METHOD=1
endif

ifeq ($(USE_APPS_TEMPLATE),y)
CFLAGS += -DUSE_APPS_TEMPLATE=1
endif

ifeq ($(USE_HTTPD_RECOVERY),y)
CFLAGS += -DUSE_HTTPD_RECOVERY=1
endif

ifeq ($(USE_IPTIME_UPGRADE_SCREEN),y)
CFLAGS += -DUSE_IPTIME_UPGRADE_SCREEN=1
endif

ifeq ($(USE_FLASH_TEST_ON_FIRST_BOOT),y)
CFLAGS += -DUSE_FLASH_TEST_ON_FIRST_BOOT=1
endif

ifeq ($(USE_RT2500),y)
CFLAGS += -DUSE_RT2500=1
endif

ifeq ($(USE_UPNP),y)
CFLAGS += -DUSE_UPNP=1
endif

ifeq ($(USE_MINIUPNP),y)
CFLAGS += -DUSE_MINIUPNP=1
endif

ifeq ($(USE_UPNP_RELAY),y)
CFLAGS += -DUSE_UPNP_RELAY=1
endif

ifeq ($(USE_DAEMON_CHECK_ALIVE),y)
CFLAGS += -DUSE_DAEMON_CHECK_ALIVE=1
endif


ifeq ($(USE_URLFILTERING),y)
CFLAGS += -DUSE_URLFILTERING=1
endif

ifeq ($(USE_HORIZONTAL_MENU),y)
CFLAGS += -DUSE_HORIZONTAL_MENU=1
endif

ifeq ($(USE_HORIZONTAL_MENU2),y)
CFLAGS += -DUSE_HORIZONTAL_MENU2=1
endif

ifeq ($(USE_HORIZONTAL_MENU3),y)
CFLAGS += -DUSE_HORIZONTAL_MENU3=1
endif

ifeq ($(USE_SCHED_MESSAGE),y)
CFLAGS += -DUSE_SCHED_MESSAGE=1
endif

ifeq ($(USE_CRAMFS_RAM2_FOR_UPGRADE),y)
CFLAGS += -DUSE_CRAMFS_RAM2_FOR_UPGRADE=1
endif

ifeq ($(USE_PCI_DEVICE),y)
CFLAGS += -DUSE_PCI_DEVICE=1
endif

ifeq ($(USE_NETDETECT),y)
CFLAGS += -DUSE_NETDETECT=1
endif

ifeq ($(USE_NETDETECT_NOT_REDIRECTION),y)
CFLAGS += -DUSE_NETDETECT_NOT_REDIRECTION=1
endif

ifeq ($(USE_HAIRPIN),y)
CFLAGS += -DUSE_HAIRPIN=1
endif

ifeq ($(USE_SYSTEM_LOG),y)
CFLAGS += -DUSE_SYSTEM_LOG=1
endif

ifeq ($(USE_ADMIN_EMAIL),y)
CFLAGS += -DUSE_ADMIN_EMAIL=1
endif

ifeq ($(USE_IPTIME_OLD_SUBTITLE),y)
CFLAGS += -DUSE_IPTIME_OLD_SUBTITLE=1
endif

ifeq ($(USE_CONFIG_SAVE_RESTORE),y)
CFLAGS += -DUSE_CONFIG_SAVE_RESTORE=1
endif

ifeq ($(USE_POST_CGI),y)
CFLAGS += -DUSE_POST_CGI=1
endif

ifeq ($(ALPHA_CLONE),y)
CFLAGS += -DALPHA_CLONE=1
endif

ifeq ($(USE_FAKE_DNS),y)
CFLAGS += -DUSE_FAKE_DNS=1
endif

ifeq ($(USE_ONLINE_UPGRADE),y)
CFLAGS += -DUSE_ONLINE_UPGRADE=1
endif

ifeq ($(USE_READONLY_ROOT),y)
CFLAGS += -DUSE_READONLY_ROOT=1
endif

ifeq ($(USE_NOLOGIN_PAGE_CONNECT),y)
CFLAGS += -DUSE_NOLOGIN_PAGE_CONNECT=1
endif

ifeq ($(USE_DUAL_WAN), y)
CFLAGS += -DUSE_DUAL_WAN=1
endif

ifeq ($(USE_PORT_DIAG),y)
CFLAGS += -DUSE_PORT_DIAG=1
endif

ifeq ($(USE_DIAG),y)
CFLAGS += -DUSE_DIAG=1
endif

ifeq ($(USE_FLASH_DIAG),y)
CFLAGS += -DUSE_FLASH_DIAG=1
endif

ifeq ($(USE_WIRELESS_DIAG),y)
CFLAGS += -DUSE_WIRELESS_DIAG=1
endif

ifeq ($(USE_RESET_DIAG),y)
CFLAGS += -DUSE_RESET_DIAG=1
endif

ifeq ($(USE_IPPOOL),y)
CFLAGS += -DUSE_IPPOOL=1
endif

ifeq ($(DIAG_CHINESE_STRING),y)
CFLAGS += -DDIAG_CHINESE_STRING=1
endif

ifeq ($(DIAG_ENGLISH_STRING),y)
CFLAGS += -DDIAG_ENGLISH_STRING=1
endif

ifeq ($(USE_WIRELESS_WORKAROUND),y)
CFLAGS += -DUSE_WIRELESS_WORKAROUND=1
endif

ifeq ($(USE_SORIBADA_DUAL_OPTION),y)
CFLAGS += -DUSE_SORIBADA_DUAL_OPTION=1
endif

ifeq ($(USE_ATHEROS11G),y)
CFLAGS += -DUSE_ATHEROS11G=1
endif

ifeq ($(USE_WIRELESS_WAN_SELECTION),y)
CFLAGS += -DUSE_WIRELESS_WAN_SELECTION=1
endif

ifeq ($(USE_NAT_ONOFF),y)
CFLAGS += -DUSE_NAT_ONOFF=1
endif

ifeq ($(USE_INPROCOM11G),y)
CFLAGS += -DUSE_INPROCOM11G=1
endif

ifeq ($(USE_ZYD1212),y)
CFLAGS += -DUSE_ZYD1212=1
endif

ifeq ($(USE_RT256X),y)
CFLAGS += -DUSE_RT256X=1
endif

ifeq ($(USE_RT2800),y)
CFLAGS += -DUSE_RT2800=1
endif

ifeq ($(USE_LOGIN_IMAGES),y)
CFLAGS += -DUSE_LOGIN_IMAGES=1
endif

ifeq ($(USE_SAVE_DIAGFLAG_FLAG),y)
CFLAGS += -DUSE_SAVE_DIAGFLAG_FLAG=1
endif

ifeq ($(USE_SAVE_SYSLOG_FLASH),y)
CFLAGS += -DUSE_SAVE_SYSLOG_FLASH=1
endif

ifeq ($(USE_NO_DOWNGRADE),y)
CFLAGS += -DUSE_NO_DOWNGRADE=1
endif

ifeq ($(USE_WPAPSK_ENABLE),y)
CFLAGS += -DUSE_WPAPSK_ENABLE=1
endif

ifeq ($(USE_WPA_ENABLE),y)
CFLAGS += -DUSE_WPA_ENABLE=1
endif

ifeq ($(USE_8021X_AUTH_ENABLE),y)
CFLAGS += -DUSE_8021X_AUTH_ENABLE=1
endif

ifeq ($(USE_WDS_ENABLE),y)
CFLAGS += -DUSE_WDS_ENABLE=1
endif

ifeq ($(USE_FLEXIBLE_INTERNAL_NETWORK),y)
CFLAGS += -DUSE_FLEXIBLE_INTERNAL_NETWORK=1
endif

ifeq ($(USE_WAN_PROMISC_WORKAROUND),y)
CFLAGS += -DUSE_WAN_PROMISC_WORKAROUND=1
endif

ifeq ($(USE_IPTIME_DDNS),y)
CFLAGS += -DUSE_IPTIME_DDNS=1
endif

ifeq ($(USE_DDNS_CLIENT),y)
CFLAGS += -DUSE_DDNS_CLIENT=1
endif

ifeq ($(USE_DHCP_AUTO_DETECT),y)
CFLAGS += -DUSE_DHCP_AUTO_DETECT=1
endif

ifeq ($(USE_NEW_FLASH_LAYOUT),y)
CFLAGS += -DUSE_NEW_FLASH_LAYOUT=1
endif

ifeq ($(USE_VAHA_APPS),y)
CFLAGS += -DUSE_VAHA_APPS=1
endif

ifeq ($(USE_ORAN_APPS),y)
CFLAGS += -DUSE_ORAN_APPS=1
endif

ifeq ($(USE_VAHA_APPS_DEVELOP),y)
CFLAGS += -DUSE_VAHA_APPS_DEVELOP=1
endif

ifeq ($(USE_LIVE_UPDATE),y)
CFLAGS += -DUSE_LIVE_UPDATE=1
endif

ifeq ($(USE_ZIGB_DAEMON),y)
CFLAGS += -DUSE_ZIGB_DAEMON=1
endif

ifeq ($(USE_MULTICAST_FORWARD),y)
CFLAGS += -DUSE_MULTICAST_FORWARD=1
endif

ifeq ($(USE_IGMP_PROXY),y)
CFLAGS += -DUSE_IGMP_PROXY=1
endif

ifeq ($(USE_IPTV_PUBLIC_IP),y)
CFLAGS += -DUSE_IPTV_PUBLIC_IP=1
endif

ifeq ($(USE_TCCLASS_LZSS),y)
CFLAGS += -DUSE_TCCLASS_LZSS=1
endif

ifeq ($(USE_NEWIPTIME_LOGIN),y)
CFLAGS += -DUSE_NEWIPTIME_LOGIN=1
endif

ifeq ($(USE_ROOTFS_FOR_UPGRADE),y)
CFLAGS += -DUSE_ROOTFS_FOR_UPGRADE=1
endif

ifeq ($(USE_EXTERNAL_ETH_SWITCH),y)
CFLAGS += -DUSE_EXTERNAL_ETH_SWITCH=1
endif

ifeq ($(USE_TIMEZION_LOGIN),y)
CFLAGS += -DUSE_TIMEZION_LOGIN=1
endif

ifeq ($(USE_IPTIME_LOGIN),y)
CFLAGS += -DUSE_IPTIME_LOGIN=1
endif

ifeq ($(USE_2WANIPTIME_LOGIN),y)
CFLAGS += -DUSE_2WANIPTIME_LOGIN=1
endif

ifeq ($(USE_APPS_INTERFACE),y)
CFLAGS += -DUSE_APPS_INTERFACE=1
endif

ifeq ($(USE_IPTIME_TIMESERVER),y)
CFLAGS += -DUSE_IPTIME_TIMESERVER=1
endif

ifeq ($(USE_SECONDARY_SAVESECTOR),y)
CFLAGS += -DUSE_SECONDARY_SAVESECTOR=1
endif

ifeq ($(USE_KAID_SUPPORT),y)
CFLAGS += -DUSE_KAID_SUPPORT=1
endif

ifeq ($(USE_LANPORTSWAP),y)
CFLAGS += -DUSE_LANPORTSWAP=1
endif

ifeq ($(USE_SIP_WITH_STUN),y)
CFLAGS += -DUSE_SIP_WITH_STUN=1
endif

ifeq ($(USE_ONLY_WANPORT_CONTROL),y)
CFLAGS += -DUSE_ONLY_WANPORT_CONTROL=1
endif

ifeq ($(USE_IPTIMECN_UI),y)
CFLAGS += -DUSE_IPTIMECN_UI=1
endif

ifeq ($(USE_CONNECTION_INFO_UI),y)
CFLAGS += -DUSE_CONNECTION_INFO_UI=1
endif

ifeq ($(USE_CONNECTION_INFO_NO_STATISTICS),y)
CFLAGS += -DUSE_CONNECTION_INFO_NO_STATISTICS=1
endif

ifeq ($(USE_CONNECTION_STAT_ADVANCED),y)
CFLAGS += -DUSE_CONNECTION_STAT_ADVANCED=1
endif

ifeq ($(USE_CONNECTION_DELETE_NOT_SUPPORT),y)
CFLAGS += -DUSE_CONNECTION_DELETE_NOT_SUPPORT=1
endif


ifeq ($(USE_VLAN_CONFIG),y)
CFLAGS += -DUSE_VLAN_CONFIG=1
endif


ifeq ($(USE_ADVANCED_SWITCH_CONFIG),y)
CFLAGS += -DUSE_ADVANCED_SWITCH_CONFIG=1
endif

ifeq ($(USE_TOP_MENU_SWITCH_CONFIG),y)
CFLAGS += -DUSE_TOP_MENU_SWITCH_CONFIG=1
endif

ifeq ($(USE_STP),y)
CFLAGS += -DUSE_STP=1
endif

ifeq ($(USE_TRUNK),y)
CFLAGS += -DUSE_TRUNK=1
endif

ifeq ($(USE_TRUNK_LAN_PORTS_ARE_BRIDGE_PORTS),y)
CFLAGS += -DUSE_TRUNK_LAN_PORTS_ARE_BRIDGE_PORTS=1
endif

ifeq ($(USE_TRUNK_WITHOUT_VLAN),y)
CFLAGS += -DUSE_TRUNK_WITHOUT_VLAN=1
endif

ifeq ($(USE_PORT_MIRROR),y)
CFLAGS += -DUSE_PORT_MIRROR=1
endif

ifeq ($(USE_PORT_ADVANCED_MIRROR),y)
CFLAGS += -DUSE_PORT_ADVANCED_MIRROR=1
endif

ifeq ($(USE_VOIP_DSCP_QOS),y)
CFLAGS += -DUSE_VOIP_DSCP_QOS=1
endif

ifeq ($(USE_GOIM_APPS),y)
CFLAGS += -DUSE_GOIM_APPS=1
endif

ifeq ($(USE_TIME54G_FIRMWARE_DIVIDE),y)
CFLAGS += -DUSE_TIME54G_FIRMWARE_DIVIDE=1
endif

ifeq ($(USE_ACCESS_LIST),y)
CFLAGS += -DUSE_ACCESS_LIST=1
endif

ifeq ($(USE_ICV_CHECK),y)
CFLAGS += -DUSE_ICV_CHECK=1
endif

ifneq ($(USE_PREDEFINED_PORT_MIRROR_NUMBER),)
CFLAGS += -DUSE_PREDEFINED_PORT_MIRROR_NUMBER=$(USE_PREDEFINED_PORT_MIRROR_NUMBER)
endif

ifeq ($(USE_XSCALE),y)
CFLAGS += -DUSE_XSCALE=1
CFLAGS += -mcpu=xscale
endif

ifeq ($(USE_ATED),y)
CFLAGS += -DUSE_ATED=1
endif

ifneq ($(FLASH_SAVE_SIZE),)
CFLAGS += -DFLASH_SAVE_SIZE=$(FLASH_SAVE_SIZE)
endif

ifneq ($(MAX_FLASH_SIZE),)
CFLAGS += -DMAX_FLASH_SIZE=$(MAX_FLASH_SIZE)
endif

ifeq ($(USE_NOT_LINKSETUP_MENU),y)
CFLAGS += -DUSE_NOT_LINKSETUP_MENU=1
endif

ifeq ($(USE_NOT_INTERNAL_MENU),y)
CFLAGS += -DUSE_NOT_INTERNAL_MENU=1
endif

ifeq ($(USE_JUST_AP),y)
CFLAGS += -DUSE_JUST_AP=1
endif

ifeq ($(USE_HOST_SCAN),y)
CFLAGS += -DUSE_HOST_SCAN=1
endif

ifeq ($(USE_DHCP_ACCESS_POLICY),y)
CFLAGS += -DUSE_DHCP_ACCESS_POLICY=1
endif

ifeq ($(USE_REMOVE_STATIC_IP),y)
CFLAGS += -DUSE_REMOVE_STATIC_IP=1
endif

ifeq ($(USE_RESTRICTIVE_PC_INTERNET),y)
CFLAGS += -DUSE_RESTRICTIVE_PC_INTERNET=1
endif

ifeq ($(USE_DHCP_ACCESS_POLICY_NOUI),y)
CFLAGS += -DUSE_DHCP_ACCESS_POLICY_NOUI=1
endif

ifeq ($(USE_34PORT_DISABLE),y)
CFLAGS += -DUSE_34PORT_DISABLE=1
endif

ifeq ($(USE_ENABLE_REMOTE_UPGRADE),y)
CFLAGS += -DUSE_ENABLE_REMOTE_UPGRADE=1
endif

ifeq ($(USE_DONT_SEND_AUTH),y)
CFLAGS += -DUSE_DONT_SEND_AUTH=1
endif

ifeq ($(USE_PPTP_CONNECT),y)
CFLAGS += -DUSE_PPTP_CONNECT=1
endif

ifeq ($(USE_RDC_R3210),y)
CFLAGS += -DUSE_RDC_R3210=1
endif

ifeq ($(USE_ATH_AR2317),y)
CFLAGS += -DUSE_ATH_AR2317=1
endif

ifeq ($(USE_FS_OPTIMIZED),y)
CFLAGS += -DUSE_FS_OPTIMIZED=1
endif


ifeq ($(USE_REAL_ONBOARD_WIRELESS),y)
CFLAGS += -DUSE_REAL_ONBOARD_WIRELESS=1
endif

ifeq ($(USE_BEWAN_SUPPORT),y)
CFLAGS += -DUSE_BEWAN_SUPPORT=1
endif

ifeq ($(USE_BCM5325E),y)
CFLAGS += -DUSE_BCM5325E=1
endif

ifeq ($(USE_IPCONFLICTION_DETECT),y)
CFLAGS += -DUSE_IPCONFLICTION_DETECT=1
endif

ifeq ($(USE_ROUTER_DNS_STATIC),y)
CFLAGS += -DUSE_ROUTER_DNS_STATIC=1
endif

ifeq ($(USE_KS8695_CRC_ENGINE_UI),y)
CFLAGS += -DUSE_KS8695_CRC_ENGINE_UI=1
endif

ifneq ($(PPPOE_DEFAULT_MTU),)
CFLAGS += -DPPPOE_DEFAULT_MTU=$(PPPOE_DEFAULT_MTU)
endif

ifeq ($(USE_WIRELESS_CLIENT_BRIDGE_MODE),y)
CFLAGS += -DUSE_WIRELESS_CLIENT_BRIDGE_MODE=1
endif

ifeq ($(USE_NODOWN_KAID),y)
CFLAGS += -DUSE_NODOWN_KAID=1
endif

ifeq ($(USE_CJ_R9420),y)
CFLAGS += -DUSE_CJ_R9420=1
endif

ifeq ($(USE_RTL8169),y)
CFLAGS += -DUSE_RTL8169=1
endif

ifeq ($(USE_I8255X),y)
CFLAGS += -DUSE_I8255X=1
endif

ifeq ($(LOADSHARE_EXTENDED_DB),y)
CFLAGS += -DLOADSHARE_EXTENDED_DB=1
endif

ifeq ($(USE_ATEDCGI_SUPPORT),y)
CFLAGS += -DUSE_ATEDCGI_SUPPORT=1
endif

ifeq ($(USE_APCPD_SUPPORT),y)
CFLAGS += -DUSE_APCPD_SUPPORT=1
endif 

ifeq ($(USE_NAS_SUPPORT),y)
CFLAGS += -DUSE_NAS_SUPPORT=1
endif 

ifeq ($(USE_KAIFS_SUPPORT),y)
CFLAGS += -DUSE_KAIFS_SUPPORT=1
endif 

ifeq ($(USE_SELECT_KAI_SERVER),y)
CFLAGS += -DUSE_SELECT_KAI_SERVER=1
endif

ifeq ($(USE_TKIPAESAUTO_ONLY),y)
CFLAGS += -DUSE_TKIPAESAUTO_ONLY=1
endif

ifeq ($(USE_KS8695_SAVECONF_WORKAROUND),y)
CFLAGS += -DUSE_KS8695_SAVECONF_WORKAROUND=1
endif

ifeq ($(USE_ADVANCED_WIRELESS_PARAM),y)
CFLAGS += -DUSE_ADVANCED_WIRELESS_PARAM=1
endif

ifeq ($(USE_WPA2PSK_ENABLE),y)
CFLAGS += -DUSE_WPA2PSK_ENABLE=1
endif

ifeq ($(USE_NEW_LIB),y)
CFLAGS += -DUSE_NEW_LIB=1
endif

ifeq ($(USE_NAVI_IPTIME_UI),y)
CFLAGS += -DUSE_NAVI_IPTIME_UI=1
endif

ifeq ($(USE_WOL_SUPPORT),y)
CFLAGS += -DUSE_WOL_SUPPORT=1
endif

ifeq ($(USE_REAL_TIME),y)
CFLAGS += -DUSE_REAL_TIME=1
endif

ifeq ($(USE_WIRELESS_MACAUTH),y)
CFLAGS+= -DUSE_WIRELESS_MACAUTH
endif

ifeq ($(USE_MULTI_BRIDGE_SUPPORT),y)
CFLAGS+= -DUSE_MULTI_BRIDGE_SUPPORT
endif

ifeq ($(USE_KS8695),y)
CFLAGS+= -DUSE_KS8695=1
endif

ifeq ($(USE_PPPOE_RETRY_CONNECTION),y)
CFLAGS+=-DUSE_PPPOE_RETRY_CONNECTION
endif

ifeq ($(USE_REMOTEWBM_CONTROL),y)
CFLAGS+=-DUSE_REMOTEWBM_CONTROL
endif

ifeq ($(USE_LAN_DHCPC),y)
CFLAGS+=-DUSE_LAN_DHCPC=1
endif

ifeq ($(USE_WAN_ENABLE),y)
CFLAGS+=-DUSE_WAN_ENABLE=1
endif

ifeq ($(USE_LAN_ENABLE),y)
CFLAGS+=-DUSE_LAN_ENABLE=1
endif

ifeq ($(USE_KS8695_CSUM_ENGINE),y)
CFLAGS+=-DUSE_KS8695_CSUM_ENGINE=1
endif

ifeq ($(USE_DONT_SEND_NOTMODIFIED_FOR_INDEX),y)
CFLAGS+=-DUSE_DONT_SEND_NOTMODIFIED_FOR_INDEX=1
endif

ifeq ($(USE_IP_MAC_BIND),y)
CFLAGS+=-DUSE_IP_MAC_BIND=1
endif

ifeq ($(USE_PORT_FORWARD),y)
CFLAGS+=-DUSE_PORT_FORWARD=1
endif

ifeq ($(USE_PORTFORWARD_V2),y)
CFLAGS+=-DUSE_PORTFORWARD_V2=1
ifeq ($(USE_PORTTRIGGER_V2),y)
CFLAGS+=-DUSE_PORTTRIGGER_V2=1
endif
endif

ifeq ($(USE_FIREWALL_V2),y)
CFLAGS+=-DUSE_FIREWALL_V2=1
endif

ifeq ($(USE_NAT_MISC),y)
CFLAGS+=-DUSE_NAT_MISC=1
endif

ifeq ($(USE_FIREWALL),y)
CFLAGS+=-DUSE_FIREWALL=1
endif

ifeq ($(USE_PORT_LINKSETUP),y)
CFLAGS += -DUSE_PORT_LINKSETUP=1
endif

ifeq ($(USE_PORT_LINKSETUP_24PORTS),y)
CFLAGS += -DUSE_PORT_LINKSETUP_24PORTS=1
endif

ifeq ($(USE_DDNS),y)
CFLAGS += -DUSE_DDNS=1
endif

ifeq ($(USE_CONFIG_MGMT),y)
CFLAGS += -DUSE_CONFIG_MGMT=1
endif

ifeq ($(USE_SYSCONF_MISC),y)
CFLAGS += -DUSE_SYSCONF_MISC=1
endif

ifeq ($(USE_FIRMWARE_UPGRADE),y)
CFLAGS += -DUSE_FIRMWARE_UPGRADE=1
endif

ifeq ($(USE_HIDDEN_TITLE_BAR),y)
CFLAGS+=-DUSE_HIDDEN_TITLE_BAR
endif

ifeq ($(USE_LOGIN_PASSWORD),y)
CFLAGS += -DUSE_LOGIN_PASSWORD=1
endif

ifneq ($(IF_LOCAL),)
CFLAGS += -DIF_LOCAL=$(IF_LOCAL)
endif

ifneq ($(IF_LOCAL2),)
CFLAGS += -DIF_LOCAL2=$(IF_LOCAL2)
endif

ifneq ($(IF_LAN),)
CFLAGS += -DIF_LAN=$(IF_LAN)
endif

ifneq ($(IF_LAN_VIDX),)
CFLAGS += -DIF_LAN_VIDX=$(IF_LAN_VIDX)
endif

ifneq ($(IF_WAN_VIDX),)
CFLAGS += -DIF_WAN_VIDX=$(IF_WAN_VIDX)
endif

ifneq ($(IF_WAN1_VIDX),)
CFLAGS += -DIF_WAN1_VIDX=$(IF_WAN1_VIDX)
endif

ifneq ($(IF_WAN2_VIDX),)
CFLAGS += -DIF_WAN2_VIDX=$(IF_WAN2_VIDX)
endif

ifneq ($(IF_LAN_PHY),)
CFLAGS += -DIF_LAN_PHY=$(IF_LAN_PHY)
endif

ifneq ($(IF_BR_WAN),)
CFLAGS += -DIF_BR_WAN=$(IF_BR_WAN)
endif

ifneq ($(IF_BR_WAN_VIDX),)
CFLAGS += -DIF_BR_WAN_VIDX=$(IF_BR_WAN_VIDX)
endif

ifneq ($(IF_WAN),)
CFLAGS += -DIF_WAN=$(IF_WAN)
endif

ifneq ($(IF_WAN_PHY),)
CFLAGS += -DIF_WAN_PHY=$(IF_WAN_PHY)
endif

ifneq ($(IF_WAN2),)
CFLAGS += -DIF_WAN2=$(IF_WAN2)
endif


ifneq ($(IF_WWAN),)
CFLAGS += -DIF_WWAN=$(IF_WWAN)
endif

ifneq ($(IF_USB),)
CFLAGS += -DIF_USB=$(IF_USB)
endif


ifneq ($(IF_WIRELESS),)
CFLAGS += -DIF_WIRELESS=$(IF_WIRELESS)
endif

ifneq ($(IF_WIRELESS_PREFIX),)
CFLAGS += -DIF_WIRELESS_PREFIX=$(IF_WIRELESS_PREFIX)
endif

ifneq ($(IF_WIRELESS_5G_PREFIX),)
CFLAGS += -DIF_WIRELESS_5G_PREFIX=$(IF_WIRELESS_5G_PREFIX)
endif

ifneq ($(IF_WIRELESS_5G_WDS_PREFIX),)
CFLAGS += -DIF_WIRELESS_5G_WDS_PREFIX=$(IF_WIRELESS_5G_WDS_PREFIX)
endif

ifneq ($(IF_WIRELESS_WDS_PREFIX),)
CFLAGS += -DIF_WIRELESS_WDS_PREFIX=$(IF_WIRELESS_WDS_PREFIX)
endif

ifneq ($(IF_WIRELESS_DEFAULT),)
CFLAGS += -DIF_WIRELESS_DEFAULT=$(IF_WIRELESS_DEFAULT)
endif

ifneq ($(IF_WIRELESS_5G),)
CFLAGS += -DIF_WIRELESS_5G=$(IF_WIRELESS_5G)

ifneq ($(IF_WWAN_5G),)
CFLAGS += -DIF_WWAN_5G=$(IF_WWAN_5G)
endif

ifneq ($(IF_WIRELESS_BAND_STEERING),)
CFLAGS += -DIF_WIRELESS_BAND_STEERING=$(IF_WIRELESS_BAND_STEERING)
endif

ifeq ($(IF_WIRELESS_SWAP),y)
CFLAGS += -DIF_WIRELESS_SWAP=1
endif

endif

ifeq ($(USE_FIREWALL_ETC),y)
CFLAGS += -DUSE_FIREWALL_ETC=1
endif

ifeq ($(USE_NETCONF),y)
CFLAGS += -DUSE_NETCONF=1
endif

ifeq ($(USE_WIRELESSCONF),y)
CFLAGS += -DUSE_WIRELESSCONF=1
endif

ifeq ($(USE_NATROUTERCONF),y)
CFLAGS += -DUSE_NATROUTERCONF=1
endif


ifeq ($(USE_FIREWALLCONF),y)
CFLAGS += -DUSE_FIREWALLCONF=1
endif

ifeq ($(USE_EXPERTCONF),y)
CFLAGS += -DUSE_EXPERTCONF=1
endif

ifeq ($(USE_TRAFFICCONF),y)
CFLAGS += -DUSE_TRAFFICCONF=1
endif

ifeq ($(USE_SYSCONF),y)
CFLAGS += -DUSE_SYSCONF=1
endif

ifeq ($(USE_WIZARD),y)
CFLAGS += -DUSE_WIZARD=1
endif

ifeq ($(USE_ONLY_CHINA_CHANNEL),y)
CFLAGS += -DUSE_ONLY_CHINA_CHANNEL=1
endif

ifeq ($(USE_SUPPORT_WDS_ESSID),y)
CFLAGS += -DUSE_SUPPORT_WDS_ESSID=1
endif

ifeq ($(USE_INMI),y)
CFLAGS += -DUSE_INMI=1
endif

ifeq ($(USE_TRANSLATE_OLD_CONFIG),y)
CFLAGS += -DUSE_TRANSLATE_OLD_CONFIG=1
endif

ifeq ($(USE_HOST_ARP_UPDATE),y)
CFLAGS += -DUSE_HOST_ARP_UPDATE=1
endif

ifeq ($(USE_RT2860),y)
CFLAGS += -DUSE_RT2860=1
endif

ifneq ($(CPU_ID),)
CFLAGS += -DCPU_ID=$(CPU_ID)
endif

ifeq ($(USE_11N_SUPPORT),y)
CFLAGS += -DUSE_11N_SUPPORT=1
endif

ifneq ($(BOTTOM_BOOTLOADER_SIZE),)
CFLAGS += -DBOTTOM_BOOTLOADER_SIZE=$(BOTTOM_BOOTLOADER_SIZE)
endif
	
ifeq ($(USE_MULTI_BSSID),y)
CFLAGS += -DUSE_MULTI_BSSID=1
endif

ifeq ($(USE_PORT_BASED_VLAN_IN_BRIDGE),y)
CFLAGS += -DUSE_PORT_BASED_VLAN_IN_BRIDGE=1
endif

ifeq ($(USE_CONNECTION_CONTROL),y)
CFLAGS += -DUSE_CONNECTION_CONTROL=1
endif

ifeq ($(USE_WAN_PHY_NOTX_WORKAROUND),y)
CFLAGS += -DUSE_WAN_PHY_NOTX_WORKAROUND=1
endif

ifeq ($(G204_LNA_UPDATE_PATCH),y)
CFLAGS += -DG204_LNA_UPDATE_PATCH=1
endif

ifeq ($(USE_NO_LINKSETUP),y)
CFLAGS += -DUSE_NO_LINKSETUP=1
endif

ifeq ($(USE_WMM),y)
CFLAGS += -DUSE_WMM=1
endif

ifeq ($(USE_CMU_SNMPD),y)
CFLAGS += -DUSE_CMU_SNMPD=1
endif

ifeq ($(USE_MS_WDS),y)
CFLAGS += -DUSE_MS_WDS=1
endif

ifeq ($(USE_SAVED),y)
CFLAGS += -DUSE_SAVED=1
endif

ifeq ($(USE_ROUTERAP_MODE),y)
CFLAGS += -DUSE_ROUTERAP_MODE=1
endif

ifeq ($(USE_WBM_80PORT),y)
CFLAGS += -DUSE_WBM_80PORT=1
endif

ifeq ($(USE_LGDACOM),y)
CFLAGS += -DUSE_LGDACOM=1
endif

ifeq ($(USE_WDS_SSID_PREFER_MODE),y)
CFLAGS += -DUSE_WDS_SSID_PREFER_MODE=1
endif

ifeq ($(USE_FIRMWARE_ROLLBACK),y)
CFLAGS += -DUSE_FIRMWARE_ROLLBACK=1
endif

ifeq ($(USE_LOGIN_INIRA),y)
CFLAGS += -DUSE_LOGIN_INIRA=1
endif

ifeq ($(USE_BCM5354),y)
CFLAGS += -DUSE_BCM5354=1
ifeq ($(USE_BCM5356),y)
CFLAGS += -DUSE_BCM5356=1

ifeq ($(USE_BCM5357),y)
CFLAGS += -DUSE_BCM5357=1
endif

ifeq ($(USE_BCM4718),y)
CFLAGS += -DUSE_BCM4718=1
endif

endif
endif

ifeq ($(USE_BCM53115S),y)
CFLAGS += -DUSE_BCM53115S=1
endif

ifeq ($(USE_ISYSD),y)
CFLAGS += -DUSE_ISYSD=1
endif

ifeq ($(USE_MERGE_ISYSD_INIT),y)
CFLAGS += -DUSE_MERGE_ISYSD_INIT=1
endif

ifeq ($(USE_MERGE_TO_INIT),y)
CFLAGS += -DUSE_MERGE_TO_INIT=1
endif



ifeq ($(USE_READONLY_WEPHOME),y)
CFLAGS += -DUSE_READONLY_WEPHOME=1
endif

ifeq ($(USE_TAR_SAVE),y)
CFLAGS += -DUSE_TAR_SAVE=1
endif

ifeq ($(USE_REGION_COUNTRY_CODE_TABLE),y)
CFLAGS += -DUSE_REGION_COUNTRY_CODE_TABLE=1
endif

ifeq ($(USE_WIRELESS_AUTO_CHANNEL),y)
CFLAGS += -DUSE_WIRELESS_AUTO_CHANNEL=1
endif

ifeq ($(USE_WIRELESS_ARP_POLLING),y)
CFLAGS += -DUSE_WIRELESS_ARP_POLLING=1
endif

ifeq ($(USE_SHARED_CGILIB),y)
CFLAGS += -DUSE_SHARED_CGILIB=1
endif

ifeq ($(SEND_LCP_TERMINATE),y)
CFLAGS += -DSEND_LCP_TERMINATE=1
endif

ifeq ($(USE_PPPINFO),y)
CFLAGS += -DUSE_PPPINFO=1
endif

ifeq ($(USE_RT288X),y)
CFLAGS += -DUSE_RT288X=1
endif

ifeq ($(USE_RT305X),y)
CFLAGS += -DUSE_RT305X=1
endif

ifeq ($(USE_RT388X),y)
CFLAGS += -DUSE_RT388X=1
endif

ifeq ($(USE_RT309X),y)
CFLAGS += -DUSE_RT309X=1
endif

ifeq ($(USE_MT7610E),y)
CFLAGS += -DUSE_MT7610E=1
endif

ifeq ($(USE_RT305X_WITH_EXTERNAL_SWITCH),y)
CFLAGS += -DUSE_RT305X_WITH_EXTERNAL_SWITCH=1
endif

ifeq ($(USE_UPGRADE_SIGNAL),y)
CFLAGS += -DUSE_UPGRADE_SIGNAL=1
endif

ifeq ($(USE_RTL8306S),y)
CFLAGS += -DUSE_RTL8306S=1
endif

ifeq ($(USE_RTL8309S),y)
CFLAGS += -DUSE_RTL8309S=1
endif

ifeq ($(USE_RTL8318P),y)
CFLAGS += -DUSE_RTL8318P=1

endif
ifeq ($(USE_RTL8326),y)
CFLAGS += -DUSE_RTL8326=1
endif

ifeq ($(USE_RTL8366XX),y)
CFLAGS += -DUSE_RTL8366XX=1
endif

ifeq ($(USE_RTL8366S),y)
CFLAGS += -DUSE_RTL8366S=1
CFLAGS += -DSIZE_OPTI_L3=1
SIZE_OPTI_L3:=y
endif

ifeq ($(USE_RTL8370),y)
CFLAGS += -DUSE_RTL8370=1
endif

ifeq ($(USE_RTL8367B),y)
CFLAGS += -DUSE_RTL8367B=1
endif

ifeq ($(USE_RTL8370_RTL8367B),y)
CFLAGS += -DUSE_RTL8370_RTL8367B=1
endif

ifeq ($(USE_RTL8367B),y)
CFLAGS += -DUSE_RTL8367B=1
endif

ifeq ($(USE_2ND_RTL8366S),y)
CFLAGS += -DUSE_2ND_RTL8366S=1
endif

ifeq ($(USE_WPS_NOTIFICATION),y)
CFLAGS += -DUSE_WPS_NOTIFICATION=1
endif

ifeq ($(USE_RTL8367R),y)
CFLAGS += -DUSE_RTL8367R=1
endif



ifeq ($(USE_WIFI_EXTENDER),y)
CFLAGS += -DUSE_WIFI_EXTENDER=1 
endif

ifeq ($(USE_EXTENDER_ONLY),y)
CFLAGS += -DUSE_EXTENDER_ONLY=1 
endif

ifeq ($(USE_DUAL_EXTENDER),y)
CFLAGS += -DUSE_DUAL_EXTENDER=1
endif

ifeq ($(USE_EXTENDER_U1),y)
CFLAGS += -DUSE_EXTENDER_U1=1
endif

ifeq ($(USE_LGTV_WPS),y)
CFLAGS += -DUSE_LGTV_WPS=1
endif

ifeq ($(USE_LGTV_DDNS),y)
CFLAGS += -DUSE_LGTV_DDNS=1
endif

ifeq ($(USE_DONT_CHANGE_SKB_HEAD),y)
CFLAGS += -DUSE_DONT_CHANGE_SKB_HEAD=1
endif

ifeq ($(USE_NO_PORT_STATISTICS),y)
CFLAGS += -DUSE_NO_PORT_STATISTICS=1
endif


ifeq ($(USE_NO_PORT_STATISTICS_CLAER),y)
CFLAGS += -DUSE_NO_PORT_STATISTICS_CLEAR=1
endif


ifeq ($(USE_PORT_STATISTICS_CATEGORY),y)
CFLAGS += -DUSE_PORT_STATISTICS_CATEGORY=1
endif

ifeq ($(USE_SIGNAL_FOR_RESET),y)
CFLAGS += -DUSE_SIGNAL_FOR_RESET=1
endif

ifeq ($(HAVE_SOFT_RESET),y)
CFLAGS += -DHAVE_SOFT_RESET=1
endif

ifeq ($(USE_GIGA_SWITCH),y)
CFLAGS += -DUSE_GIGA_SWITCH=1
endif

ifeq ($(USE_PHILTEC_OPTION),y)
CFLAGS += -DUSE_PHILTEC_OPTION=1
endif

ifeq ($(USE_SKT_SEMO_OPTION),y)
CFLAGS += -DUSE_SKT_SEMO_OPTION=1
endif

ifeq ($(USE_FIRMARCH_V1),y)
CFLAGS += -DUSE_FIRMARCH_V1=1
endif

ifeq ($(USE_WPS),y)
CFLAGS += -DUSE_WPS=1
endif

ifeq ($(USE_WPS_BUTTON),y)
CFLAGS += -DUSE_WPS_BUTTON=1
endif

ifeq ($(USE_WPS_ONLY_BUTTON),y)
CFLAGS += -DUSE_WPS_ONLY_BUTTON=1
endif

ifeq ($(USE_WPS_PIN),y)
CFLAGS += -DUSE_WPS_PIN=1
endif

ifeq ($(USE_WPS_CONCURRENT_DRIVER),y)
CFLAGS += -DUSE_WPS_CONCURRENT_DRIVER=1
endif



ifeq ($(USE_WPS_PINCODE_FLASH),y)
CFLAGS += -DUSE_WPS_PINCODE_FLASH=1
endif

ifeq ($(USE_TKIPAES),y)
CFLAGS += -DUSE_TKIPAES=1
endif

ifeq ($(USE_SAVE_SIGNAL),y)
CFLAGS += -DUSE_SAVE_SIGNAL=1
endif

ifeq ($(USE_AUTO_SAVING),y)
CFLAGS += -DUSE_AUTO_SAVING=1
endif

ifeq ($(USE_HUB_MODE),y)
CFLAGS += -DUSE_HUB_MODE=1
endif

ifeq ($(USE_MACADDR_TO_DIAGFLAG),y)
CFLAGS += -DUSE_MACADDR_TO_DIAGFLAG=1
endif

ifeq ($(USE_DHCP_CHECK_SAME_SUBNET),y)
CFLAGS += -DUSE_DHCP_CHECK_SAME_SUBNET=1
endif

ifeq ($(USE_NEW_TREE),y)
CFLAGS += -DUSE_NEW_TREE=1
endif

ifeq ($(USE_4X_BSSID),y)
CFLAGS += -DUSE_4X_BSSID=1
endif

ifeq ($(USE_2X_MAC),y)
CFLAGS += -DUSE_2X_MAC=1
endif

ifeq ($(USE_RALINK_NEW_ACL),y)
CFLAGS += -DUSE_RALINK_NEW_ACL=1
endif

ifeq ($(USE_KERNEL_2_6),y)
CFLAGS += -DUSE_KERNEL_2_6=1
endif

ifeq ($(USE_RALINK_NEW_DRIVER_INTERFACE_POLICY),y)
CFLAGS += -DUSE_RALINK_NEW_DRIVER_INTERFACE_POLICY=1
endif

ifeq ($(USE_TELNET_LOGIN),y)
CFLAGS += -DUSE_TELNET_LOGIN=1
endif

ifeq ($(USE_TXPOWER_DEBUG),y)
CFLAGS += -DUSE_TXPOWER_DEBUG=1
endif

ifeq ($(USE_CONNECTION_TIMEOUT_CONTROL),y)
CFLAGS += -DUSE_CONNECTION_TIMEOUT_CONTROL=1
endif

ifeq ($(USE_IBRAS_LOGIN),y)
CFLAGS += -DUSE_IBRAS_LOGIN=1
endif

ifeq ($(USE_NZION_INTERFACE),y)
CFLAGS += -DUSE_NZION_INTERFACE=1
endif

ifeq ($(USE_NO_POPUP_WBM_CONFIG),y)
CFLAGS += -DUSE_NO_POPUP_WBM_CONFIG=1
endif

ifeq ($(EU_COMPANY),y)
CFLAGS += -DEU_COMPANY=1
endif

ifeq ($(EU_COMPANY2),y)
CFLAGS += -DEU_COMPANY2=1
endif

ifeq ($(USE_WAN_DHCP_DETAIL_INFO),y)
CFLAGS += -DUSE_WAN_DHCP_DETAIL_INFO=1
endif

ifneq ($(SYSPARMS_MINUS_OFFSET),)
CFLAGS += -DSYSPARMS_MINUS_OFFSET=$(SYSPARMS_MINUS_OFFSET)
endif

ifeq ($(USE_BIG_ENDIAN),y)
CFLAGS += -DUSE_BIG_ENDIAN=1
endif

ifeq ($(USE_NO_KMODULE),y)
CFLAGS += -DUSE_NO_KMODULE=1
endif

ifeq ($(USE_ETC_SYSLOG),y)
CFLAGS += -DUSE_ETC_SYSLOG=1
endif

ifeq ($(USE_PORT_QOS),y)
CFLAGS += -DUSE_PORT_QOS=1
endif

ifeq ($(USE_NZION_MENUDESC),y)
CFLAGS += -DUSE_NZION_MENUDESC=1
endif

ifeq ($(USE_HWNAT_CONFIG),y)
CFLAGS += -DUSE_HWNAT_CONFIG=1
endif

ifeq ($(USE_REAL_HUB_MODE),y)
CFLAGS += -DUSE_REAL_HUB_MODE=1
endif

ifeq ($(USE_ADDRESS_LEARNING_CONTROL),y)
CFLAGS += -DUSE_ADDRESS_LEARNING_CONTROL=1
endif

ifeq ($(USE_H323_IPQUEUE),y)
CFLAGS += -DUSE_H323_IPQUEUE=1
endif

ifeq ($(USE_VIEW_ALL_ALLOCATED_IP),y)
CFLAGS += -DUSE_VIEW_ALL_ALLOCATED_IP=1
endif

ifneq ($(RUN_LED_GPIO_NUM),)
CFLAGS += -DRUN_LED_GPIO_NUM=$(RUN_LED_GPIO_NUM)
endif

ifneq ($(USB_LED_GPIO_NUM),)
CFLAGS += -DUSB_LED_GPIO_NUM=$(USB_LED_GPIO_NUM)
endif

ifeq ($(USE_2ND_BCM_SDK),y)
CFLAGS += -DUSE_2ND_BCM_SDK=1
endif

ifeq ($(USE_WL_WAN_MB),y)
CFLAGS += -DUSE_WL_WAN_MB=1
endif

ifeq ($(USE_IPMAC_BIND),y)
CFLAGS += -DUSE_IPMAC_BIND=1
endif

ifeq ($(USE_ARP_PROTECTION),y)
CFLAGS += -DUSE_ARP_PROTECTION=1
endif

ifeq ($(USE_PPPOE_SCHEDULE),y)
CFLAGS += -DUSE_PPPOE_SCHEDULE=1
endif

ifeq ($(USE_PPPOE_LCP_OPTION),y)
CFLAGS += -DUSE_PPPOE_LCP_OPTION=1
endif

ifeq ($(USE_STRATEGY_ROUTING),y)
CFLAGS += -DUSE_STRATEGY_ROUTING=1
endif

ifeq ($(USE_DSTMATCH_MATCH_RULE),y)
CFLAGS += -DUSE_DSTMATCH_MATCH_RULE=1
endif

ifeq ($(USE_CHECK_DAEMON),y)
CFLAGS += -DUSE_CHECK_DAEMON=1
endif

ifeq ($(USE_5G_WL),y)
CFLAGS += -DUSE_5G_WL=1
endif

ifeq ($(USE_5G_WL2),y)
CFLAGS += -DUSE_5G_WL2=1
endif


ifeq ($(USE_CONCURRENT_BAND),y)
CFLAGS += -DUSE_CONCURRENT_BAND=1
endif

ifeq ($(USE_DYNAMIC_CONCURRENT_BAND),y)
CFLAGS += -DUSE_DYNAMIC_CONCURRENT_BAND=1

ifeq ($(USE_NO_BAND_CONFIG),y)
CFLAGS += -DUSE_NO_BAND_CONFIG=1
endif
endif

ifeq ($(USE_ISPFAKE),y)
CFLAGS += -DUSE_ISPFAKE=1
endif

ifeq ($(USE_SPECIAL_PPPOE_ENCODE),y)
CFLAGS += -DUSE_SPECIAL_PPPOE_ENCODE=1
endif

ifeq ($(USE_GERMANY_REGION),y)
CFLAGS += -DUSE_GERMANY_REGION=1
endif

ifeq ($(USE_CHECK_RESET_SYSD),y)
CFLAGS += -DUSE_CHECK_RESET_SYSD=1
endif

ifeq ($(USE_ASIA_REGION),y)
CFLAGS += -DUSE_ASIA_REGION=1
endif

ifeq ($(USE_LINKUP_DHCP_RESTART),y)
CFLAGS += -DUSE_LINKUP_DHCP_RESTART=1
endif

ifeq ($(USE_ARGENTINA),y)
CFLAGS += -DUSE_ARGENTINA=1
endif

ifeq ($(USE_KOSUMI_CH),y)
CFLAGS += -DUSE_KOSUMI_CH=1
endif

ifeq ($(USE_SHRINK_MEM),y)
CFLAGS += -DUSE_SHRINK_MEM=1
endif

ifeq ($(USE_GET_URL),y)
CFLAGS += -DUSE_GET_URL=1
endif

ifeq ($(USE_WIRELESS_MULTICAST_FILTERING),y)
CFLAGS += -DUSE_WIRELESS_MULTICAST_FILTERING=1
endif

ifeq ($(USE_LED_SILENT_CONTROL),y)
CFLAGS += -DUSE_LED_SILENT_CONTROL=1
endif

ifeq ($(USE_NO_WIRED_IGMP_SNOOPING),y)
CFLAGS += -DUSE_NO_WIRED_IGMP_SNOOPING=1
endif

ifeq ($(USE_WMM_PARAMS_CONTROL),y)
CFLAGS += -DUSE_WMM_PARAMS_CONTROL=1
endif

ifeq ($(USE_WL_RATESET),y)
CFLAGS += -DUSE_WL_RATESET=1
endif

ifeq ($(USE_BRIDGE_ONLY_CUSTOMIZE),y)
CFLAGS += -DUSE_BRIDGE_ONLY_CUSTOMIZE=1
endif

ifeq ($(USE_LS_CABLE),y)
CFLAGS += -DUSE_LS_CABLE=1
endif

ifeq ($(USE_FAST_L2_ROAMING),y)
CFLAGS += -DUSE_FAST_L2_ROAMING=1
endif

ifeq ($(USE_UI1),y)
CFLAGS += -DUSE_UI1=1
endif

ifeq ($(USE_UI2),y)
CFLAGS += -DUSE_UI2=1
endif

ifneq ($(SYS_DRAM_SIZE),)
CFLAGS += -DSYS_DRAM_SIZE=$(SYS_DRAM_SIZE)
endif

ifeq ($(WIRELESS_SSID_TEST_DUP),y)
CFLAGS += -DWIRELESS_SSID_TEST_DUP=1
endif

ifeq ($(USE_FR_CH11),y)
CFLAGS += -DUSE_FR_CH11=1
endif

ifeq ($(USE_SAVE_INFO),y)
CFLAGS += -DUSE_SAVE_INFO=1
endif

ifeq ($(USE_CHANNEL_LIST_SUPPORT_BY_DRIVER),y)
CFLAGS += -DUSE_CHANNEL_LIST_SUPPORT_BY_DRIVER=1
endif

ifeq ($(USE_KICKMAC_NOT_SUPPORT),y)
CFLAGS += -DUSE_KICKMAC_NOT_SUPPORT=1
endif

ifeq ($(USE_APCP_ACTIVE_SEARCH),y)
CFLAGS += -DUSE_APCP_ACTIVE_SEARCH=1
endif

ifeq ($(USE_EFM_PRODUCT),y)
CFLAGS += -DUSE_EFM_PRODUCT=1
endif

ifeq ($(USE_TOTO_PRODUCT),y)
CFLAGS += -DUSE_TOTO_PRODUCT=1
endif

ifeq ($(USE_ORAY_DDNS),y)
CFLAGS += -DUSE_ORAY_DDNS=1
endif

ifeq ($(USE_WPS_RESTART_SIGNAL),y)
CFLAGS += -DUSE_WPS_RESTART_SIGNAL=1
endif

ifeq ($(USE_R33_SPECIAL_UI),y)
CFLAGS += -DUSE_R33_SPECIAL_UI=1
endif

ifeq ($(USE_NEW_BCM_WPS),y)
CFLAGS += -DUSE_NEW_BCM_WPS=1
endif

ifeq ($(USE_NO_LAN_GATEWAY),y)
CFLAGS += -DUSE_NO_LAN_GATEWAY=1
endif

ifeq ($(USE_RTK_FAST_NAT_WORKAROUND),y)
CFLAGS += -DUSE_RTK_FAST_NAT_WORKAROUND=1
endif

ifeq ($(PIXEL_CONFIG),y)
CFLAGS += -DPIXEL_CONFIG=1
endif

ifeq ($(USE_OIW_CONFIG),y)
CFLAGS += -DUSE_OIW_CONFIG=1
endif

ifeq ($(USE_1PORT_LAN),y)
CFLAGS += -DUSE_1PORT_LAN=1
endif

ifeq ($(USE_WAN_FOR_LAN),y)
CFLAGS += -DUSE_WAN_FOR_LAN=1
endif

ifeq ($(USE_NO_CHANNEL_SEARCH),y)
CFLAGS += -DUSE_NO_CHANNEL_SEARCH=1
endif

ifeq ($(USE_PPPOE_RELAY),y)
CFLAGS += -DUSE_PPPOE_RELAY=1
endif

ifeq ($(USE_MOBILE_CGI),y)
CFLAGS += -DUSE_MOBILE_CGI=1
endif

ifeq ($(USE_URL_REDIRECT),y)
CFLAGS += -DUSE_URL_REDIRECT=1
endif

ifeq ($(USE_URL_REDIRECT_PRIVATE1),y)
CFLAGS += -DUSE_URL_REDIRECT_PRIVATE1=1
endif

ifeq ($(USE_CHANGEIP_DDNS),y)
CFLAGS += -DUSE_CHANGEIP_DDNS=1
endif

ifeq ($(USE_DTDNS_DDNS),y)
CFLAGS += -DUSE_DTDNS_DDNS=1
endif

ifeq ($(USE_NOIP_DDNS),y)
CFLAGS += -DUSE_NOIP_DDNS=1
endif

ifeq ($(USE_2211_DNS),y)
CFLAGS += -DUSE_2211_DNS=1
endif

ifeq ($(USE_3322_DNS),y)
CFLAGS += -DUSE_3322_DNS=1
endif

ifeq ($(USE_DYN_DNS),y)
CFLAGS += -DUSE_DYN_DNS=1
endif

ifeq ($(USE_PC_IPDISK_SERVER),y)
CFLAGS += -DUSE_PC_IPDISK_SERVER=1
endif

ifeq ($(USE_ROUTER_NAS),y)
CFLAGS += -DUSE_ROUTER_NAS=1
endif

ifeq ($(USE_ROUTER_NAS_DEBUG),y)
CFLAGS += -DUSE_ROUTER_NAS_DEBUG=1
endif

ifeq ($(USE_PURE_AP),y)
CFLAGS += -DUSE_PURE_AP=1
endif

ifeq ($(USE_WOL_SERVER),y)
CFLAGS += -DUSE_WOL_SERVER=1
endif

ifeq ($(USE_NEW_IPTABLES_STRING),y)
CFLAGS += -DUSE_NEW_IPTABLES_STRING=1
endif

ifeq ($(USE_WL_IPTIME_HELPER),y)
CFLAGS += -DUSE_WL_IPTIME_HELPER=1
endif

ifeq ($(USE_MINI_IPTIME_HELPER),y)
CFLAGS += -DUSE_MINI_IPTIME_HELPER=1
endif

ifeq ($(USE_OPENTTY2),y)
CFLAGS += -DUSE_OPENTTY2=1
endif

ifeq ($(USE_MOUNT_PTS),y)
CFLAGS += -DUSE_MOUNT_PTS=1
endif

ifeq ($(USE_SMART_REPEATER),y)
CFLAGS += -DUSE_SMART_REPEATER=1
endif

ifeq ($(USE_ONE_USB_STORAGE_SUPPORT),y)
CFLAGS += -DUSE_ONE_USB_STORAGE_SUPPORT=1
endif

ifeq ($(USE_CAPTCHA_CODE),y)
CFLAGS += -DUSE_CAPTCHA_CODE=1
endif

ifeq ($(USE_HTTP_SESSION),y)
CFLAGS += -DUSE_HTTP_SESSION=1
endif

ifeq ($(USE_HTTP_SESSION_SECURITY_PATCH),y)
CFLAGS += -DUSE_HTTP_SESSION_SECURITY_PATCH=1
endif

ifeq ($(USE_SECURITY_PATCH_1),y)
CFLAGS += -DUSE_SECURITY_PATCH_1=1
endif

ifeq ($(USE_CSRF_BLOCK),y)
CFLAGS += -DUSE_CSRF_BLOCK=1
endif

ifeq ($(USE_BCM_CTF),y)
CFLAGS += -DUSE_BCM_CTF=1
endif

ifeq ($(USE_COEX_OPTION),y)
CFLAGS += -DUSE_COEX_OPTION=1
endif

ifeq ($(USE_11AC),y)
CFLAGS += -DUSE_11AC=1
endif

ifeq ($(USE_RTL34_SDK),y)
CFLAGS += -DUSE_RTL34_SDK=1
endif

ifeq ($(USE_TX_BEAMFORMING),y)
CFLAGS += -DUSE_TX_BEAMFORMING=1
endif

ifeq ($(USE_BCM_MAX_PWR_PATCH),y)
CFLAGS += -DUSE_BCM_MAX_PWR_PATCH=1
endif

ifeq ($(USE_MV6281),y)
CFLAGS += -DUSE_MV6281=1
endif

ifeq ($(USE_OPENWRT_SMBPASSWD),y)
CFLAGS += -DUSE_OPENWRT_SMBPASSWD=1
endif

ifeq ($(USE_NEW_IPTABLES_IPRANGE),y)
CFLAGS += -DUSE_NEW_IPTABLES_IPRANGE=1
endif

ifeq ($(USE_LEDD),y)
CFLAGS += -DUSE_LEDD=1
endif

ifeq ($(USE_IPTABLES_1_4_12),y)
CFLAGS += -DUSE_IPTABLES_1_4_12=1
endif

ifeq ($(USE_RT6856_HIGHPWR_BOARD),y)
CFLAGS += -DUSE_RT6856_HIGHPWR_BOARD=1
endif

ifeq ($(USE_NEW_PROFTPD),y)
CFLAGS += -DUSE_NEW_PROFTPD=1
endif

ifeq ($(USE_AUTO_REBOOT),y)
CFLAGS += -DUSE_AUTO_REBOOT=1
endif

ifeq ($(USE_IPDISK_SERVICE),y)
CFLAGS += -DUSE_IPDISK_SERVICE=1
endif

ifeq ($(USE_EMINENT),y)
CFLAGS += -DUSE_EMINENT=1
endif

ifeq ($(USE_USB_DEV_V2),y)
CFLAGS += -DUSE_USB_DEV_V2=1
endif

ifeq ($(USE_USB_DEV_V1),y)
CFLAGS += -DUSE_USB_DEV_V1=1
endif

ifeq ($(USE_BCM_URE_PATCH_FOR_DUALBAND),y)
CFLAGS += -DUSE_BCM_URE_PATCH_FOR_DUALBAND=1
endif

ifeq ($(USE_BCM_URE_PATCH_FOR_DUALBAND),y)
CFLAGS += -DUSE_BCM_URE_PATCH_FOR_DUALBAND=1
endif

ifeq ($(USE_GPIO_PROFILE),y)
CFLAGS += -DUSE_GPIO_PROFILE=1
endif

ifeq ($(USE_MULTI_PLATFORM),y)
CFLAGS += -DUSE_MULTI_PLATFORM=1
endif

ifeq ($(USE_TCPMSS_IPTABLES_RULE),y)
CFLAGS += -DUSE_TCPMSS_IPTABLES_RULE=1
endif

ifeq ($(USE_NETSTAT_LL_TYPE),y)
CFLAGS += -DUSE_NETSTAT_LL_TYPE=1
endif

ifeq ($(USE_KT_3WAN_PORTS),y)
CFLAGS += -DUSE_KT_3WAN_PORTS=1
endif

ifeq ($(USE_SNMPD),y)
CFLAGS += -DUSE_SNMPD=1
endif

ifeq ($(USE_SNMP_IPTIME_PRIVATE_MIB),y)
CFLAGS += -DUSE_SNMP_IPTIME_PRIVATE_MIB=1
endif

ifeq ($(USE_EXFAT),y)
CFLAGS += -DUSE_EXFAT=1
endif

ifeq ($(USE_PLANTYNET),y)
CFLAGS += -DUSE_PLANTYNET=1
ifeq ($(USE_PLANTYNET_DEBUG),y)
CFLAGS += -DUSE_PLANTYNET_DEBUG=1
endif
endif

ifeq ($(USE_PLANTYNET_V2),y)
CFLAGS += -DUSE_PLANTYNET_V2=1
endif

ifeq ($(USE_WPS_PBC_SCAN),y)
CFLAGS += -DUSE_WPS_PBC_SCAN=1
endif

ifeq ($(USE_IGMP_CONFIG_REBOOT),y)
CFLAGS += -DUSE_IGMP_CONFIG_REBOOT=1
endif

ifeq ($(USE_DYNAMIC_CHANNEL_SEARCH),y)
CFLAGS += -DUSE_DYNAMIC_CHANNEL_SEARCH=1
endif

ifeq ($(USE_WIFI_SCHEDULER),y)
CFLAGS += -DUSE_WIFI_SCHEDULER=1
endif


ifeq ($(USE_GEN_SCHEDULER),y)
CFLAGS += -DUSE_GEN_SCHEDULER=1
endif

ifeq ($(USE_WIRELESSCONF_ADVANCED2),y)
CFLAGS += -DUSE_WIRELESSCONF_ADVANCED2=1
endif

ifeq ($(USE_GET_BEST_CHANNEL_FROM_DRIVER),y)
CFLAGS += -DUSE_GET_BEST_CHANNEL_FROM_DRIVER=1
endif

ifeq ($(USE_SET_AUTO_CHANNEL_BY_EFMALG),y)
CFLAGS += -DUSE_SET_AUTO_CHANNEL_BY_EFMALG=1
endif

ifeq ($(USE_TCP_LIBERAL_PATCH),y)
CFLAGS += -DUSE_TCP_LIBERAL_PATCH=1
endif

ifeq ($(USE_KT_4VIEW),y)
CFLAGS += -DUSE_KT_4VIEW=1
endif

ifeq ($(USE_LDPC),y)
CFLAGS += -DUSE_LDPC=1
endif

ifeq ($(USE_STBC),y)
CFLAGS += -DUSE_STBC=1
endif

ifeq ($(USE_MOBILE_CGI_PFORWARD),y)
CFLAGS += -DUSE_MOBILE_CGI_PFORWARD=1
endif


ifeq ($(USE_KTT_CONFIG),y)
CFLAGS += -DUSE_KTT_CONFIG=1
endif

ifeq ($(USE_DFS_OPTION),y)
CFLAGS += -DUSE_DFS_OPTION=1
endif

ifeq ($(USE_IPERF),y)
CFLAGS += -DUSE_IPERF=1
endif

ifeq ($(USE_RADIUS),y)
CFLAGS += -DUSE_RADIUS=1
endif

ifeq ($(USE_UI3),y)
CFLAGS += -DUSE_UI3=1
endif

ifeq ($(USE_DUAL_MACTRY_LIST),y)
CFLAGS += -DUSE_DUAL_MACTRY_LIST=1
endif

ifeq ($(USE_FTP_DEBUG_SUPPORT),y)
CFLAGS += -DUSE_FTP_DEBUG_SUPPORT=1
endif

ifeq ($(USE_IPTIME_SERVICE_NETWORK),y)
CFLAGS += -DUSE_IPTIME_SERVICE_NETWORK=1
endif

ifeq ($(USE_IPTIME_SERVICE_NETWORK_CALLBACK),y)
CFLAGS += -DUSE_IPTIME_SERVICE_NETWORK_CALLBACK=1
endif

ifeq ($(USE_TUXERA_NTFS),y)
CFLAGS += -DUSE_TUXERA_NTFS=1
endif

ifeq ($(USE_OEM_UI),y)
CFLAGS += -DUSE_OEM_UI=1
endif

ifeq ($(USE_PLANTYNET_BYPASS_HWNAT),y)
CFLAGS += -DUSE_PLANTYNET_BYPASS_HWNAT=1
endif

ifeq ($(USE_CLOUD_BACKUP),y)
CFLAGS += -DUSE_CLOUD_BACKUP=1
endif

ifeq ($(USE_UPNP_DOWNLOAD_FOR_SIZE),y)
CFLAGS += -DUSE_UPNP_DOWNLOAD_FOR_SIZE=1
endif

ifeq ($(USE_TOTO_MOD),y)
CFLAGS += -DUSE_TOTO_MOD=1
endif

ifeq ($(USE_FIRMUP_PROTECT2),y)
CFLAGS += -DUSE_FIRMUP_PROTECT2=1
endif

ifeq ($(USE_OLD_RTL_HWPARAM),y)
CFLAGS += -DUSE_OLD_RTL_HWPARAM=1
endif

ifeq ($(USE_WPS_AUTO_DHCPC),y)
CFLAGS += -DUSE_WPS_AUTO_DHCPC=1
endif

ifeq ($(USE_SYNC_AP_CONFIG),y)
CFLAGS += -DUSE_SYNC_AP_CONFIG=1
endif

ifeq ($(USE_WPS_OPEN_CGI),y)
CFLAGS += -DUSE_WPS_OPEN_CGI=1
endif

ifeq ($(USE_PISEN_EXTENDER),y)
CFLAGS += -DUSE_PISEN_EXTENDER=1
endif

ifeq ($(USE_T3008_ARCH),y)
CFLAGS += -DUSE_T3008_ARCH=1
endif

ifeq ($(USE_NEW_MAC_SCHEME),y)
CFLAGS += -DUSE_NEW_MAC_SCHEME=1
endif

ifeq ($(USE_LOGO_PNG_FILE),y)
CFLAGS += -DUSE_LOGO_PNG_FILE=1
endif

ifeq ($(USE_NO_LOGIN_INFO_PAGE),y)
CFLAGS += -DUSE_NO_LOGIN_INFO_PAGE=1
endif

ifeq ($(USE_HIGHPWR_PA_FOR_8881A),y)
CFLAGS += -DUSE_HIGHPWR_PA_FOR_8881A=1
endif

ifeq ($(USE_LOG_TO_CATCH_HACKER),y)
CFLAGS += -DUSE_LOG_TO_CATCH_HACKER=1
endif

ifeq ($(USE_AGSISTEM),y)
CFLAGS += -DUSE_AGSISTEM=1
endif

ifeq ($(USE_BOOT_CONFIG),y)
CFLAGS += -DUSE_BOOT_CONFIG=1
endif

ifeq ($(USE_KT_IPTV_CONFIG),y)
CFLAGS += -DUSE_KT_IPTV_CONFIG=1
endif

ifeq ($(USE_NO_FILESYSTE_MODULE),y)
CFLAGS += -DUSE_NO_FILESYSTE_MODULE=1
endif

ifeq ($(USE_DLNA),y)
CFLAGS += -DUSE_DLNA=1
endif

ifeq ($(USE_MINISSDP),y)
CFLAGS += -DUSE_MINISSDP=1
endif

ifeq ($(USE_TORRENT),y)
CFLAGS += -DUSE_TORRENT=1
endif

ifeq ($(USE_APP_PLUGIN),y)
CFLAGS += -DUSE_APP_PLUGIN=1
endif

ifeq ($(USE_APP_PLUGIN_SAMBA),y)
CFLAGS += -DUSE_APP_PLUGIN_SAMBA=1
endif

ifeq ($(USE_SKIP_NF_TCP_PORT),y)
CFLAGS += -DUSE_SKIP_NF_TCP_PORT=1
endif

ifeq ($(USE_MOBILE_AP_PRODUCT),y)
CFLAGS += -DUSE_MOBILE_AP_PRODUCT=1
endif

ifeq ($(USE_USB_MODULE_RELOAD_WA),y)
CFLAGS += -DUSE_USB_MODULE_RELOAD_WA=1
endif

ifeq ($(USE_TOTOLINK_EN_REGION),y)
CFLAGS += -DUSE_TOTOLINK_EN_REGION=1
endif

ifeq ($(USE_TOTOLINK_PORTU),y)
CFLAGS += -DUSE_TOTOLINK_PORTU=1
endif

ifeq ($(USE_FTM),y)
CFLAGS += -DUSE_FTM=1
endif

ifeq ($(USE_NEW_REALTIME),y)
CFLAGS += -DUSE_NEW_REALTIME=1
endif

ifeq ($(USE_JUMBO_FRAME_CONTROL),y)
CFLAGS += -DUSE_JUMBO_FRAME_CONTROL=1
endif

ifeq ($(USE_LANWAN_SWITCH),y)
CFLAGS += -DUSE_LANWAN_SWITCH=1
endif

ifeq ($(USE_NO_MACCLONE_GIGA),y)
CFLAGS += -DUSE_NO_MACCLONE_GIGA=1
endif

ifeq ($(USE_USB_TETHERING),y)
CFLAGS += -DUSE_USB_TETHERING=1
endif

ifeq ($(USE_BCM_MCSOFFSET_PATCH),y)
CFLAGS += -DUSE_BCM_MCSOFFSET_PATCH=1
endif

ifeq ($(USE_ITUNES_SERVER),y)
CFLAGS += -DUSE_ITUNES_SERVER=1
endif

ifeq ($(USE_RTL_SDK_3465),y)
CFLAGS += -DUSE_RTL_SDK_3465=1
endif

ifeq ($(USE_MTK_SDK_4320),y)
CFLAGS += -DUSE_MTK_SDK_4320=1
endif

ifeq ($(USE_MTK_SDK_5020),y)
CFLAGS += -DUSE_MTK_SDK_5020=1
endif

ifeq ($(USE_APM),y)
CFLAGS += -DUSE_APM=1
endif

ifeq ($(USE_PLUGIN_MENU),y)
CFLAGS += -DUSE_PLUGIN_MENU=1
endif

ifeq ($(USE_URL_REDIRECT_FOR_EXTENDER),y)
CFLAGS += -DUSE_URL_REDIRECT_FOR_EXTENDER=1
endif

ifeq ($(USE_FAN_CONTROL),y)
CFLAGS += -DUSE_FAN_CONTROL=1
endif

ifeq ($(USE_FIRMUP2),y)
CFLAGS += -DUSE_FIRMUP2=1
endif

ifeq ($(USE_RTL8196E_RTL34),y)
CFLAGS += -DUSE_RTL8196E_RTL34=1
endif

ifeq ($(USE_CUPS),y)
CFLAGS += -DUSE_CUPS=1
endif

ifeq ($(USE_2G_QAM256_SUPPORT),y)
CFLAGS += -DUSE_2G_QAM256_SUPPORT=1
endif

ifeq ($(USE_MTK_FACTORY_SECTOR),y)
CFLAGS += -DUSE_MTK_FACTORY_SECTOR=1
endif

ifeq ($(USE_KT_SPEED_TEST),y)
CFLAGS += -DUSE_KT_SPEED_TEST=1
endif

ifeq ($(USE_IPTIME_DDNS_CLIENT_2_0),y)
CFLAGS += -DUSE_IPTIME_DDNS_CLIENT_2_0=1
endif

ifeq ($(USE_DUAL_FIRMWARE),y)
CFLAGS += -DUSE_DUAL_FIRMWARE=1
endif

ifeq ($(USE_ADDITIONAL_NAND_SUPPORT),y)
CFLAGS += -DUSE_ADDITIONAL_NAND_SUPPORT=1
endif

ifeq ($(USE_DUAL_USB),y)
CFLAGS += -DUSE_DUAL_USB=1
endif

ifeq ($(USE_CONTROL_BY_WIFI_SWITCH),y)
CFLAGS += -DUSE_CONTROL_BY_WIFI_SWITCH=1
endif

ifeq ($(USE_EXTENDER_DESC),y)
CFLAGS += -DUSE_EXTENDER_DESC=1
endif

ifeq ($(USE_LED_SWITCH),y)
CFLAGS += -DUSE_LED_SWITCH=1
endif

ifeq ($(USE_USB_MODE_SELECT),y)
CFLAGS += -DUSE_USB_MODE_SELECT=1
endif

ifeq ($(USE_CHECK_USB_MODE),y)
CFLAGS += -DUSE_CHECK_USB_MODE=1
endif

ifeq ($(USE_SYSCONF_MISC2),y)
CFLAGS += -DUSE_SYSCONF_MISC2=1
endif

ifeq ($(USE_ATE_PDGAIN_PATCH_FOR_2G),y)
CFLAGS += -DUSE_ATE_PDGAIN_PATCH_FOR_2G=1
endif

ifeq ($(USE_MOBILE_UI),y)
CFLAGS += -DUSE_MOBILE_UI=1
endif

ifeq ($(USE_QOS_REBOOT),y)
CFLAGS += -DUSE_QOS_REBOOT=1
endif

ifeq ($(USE_ROUTER_MGMT_PORT),y)
CFLAGS += -DUSE_ROUTER_MGMT_PORT=1
endif

ifeq ($(USE_NO_MACCLONE_GIGA_OPTION),y)
CFLAGS += -DUSE_NO_MACCLONE_GIGA_OPTION=1
endif

ifeq ($(USE_PATCH_FOR_KOREA_REGURATION),y)
CFLAGS += -DUSE_PATCH_FOR_KOREA_REGURATION=1
endif

ifeq ($(USE_PATCH_FOR_KOREA_REGURATION_WAS1_PAVALUE),y)
CFLAGS += -DUSE_PATCH_FOR_KOREA_REGURATION_WAS1_PAVALUE=1
endif

ifeq ($(USE_PATCH_FOR_BCM_WATCHDOG),y)
CFLAGS += -DUSE_PATCH_FOR_BCM_WATCHDOG=1
endif

ifeq ($(USE_BCM_PHY_WATCHDOG),y)
CFLAGS += -DUSE_BCM_PHY_WATCHDOG=1
endif

ifeq ($(USE_REMOTE_CONTROL_SUPPORT),y)
CFLAGS += -DUSE_REMOTE_CONTROL_SUPPORT=1
endif

ifeq ($(USE_MT7612_MODULE),y)
CFLAGS += -DUSE_MT7612_MODULE=1
endif

ifeq ($(USE_MT7620_HP),y)
CFLAGS += -DUSE_MT7620_HP=1
endif

ifeq ($(USE_1PORT_AP),y)
CFLAGS += -DUSE_1PORT_AP=1
endif

ifeq ($(USE_DOME_PLATFORM),y)
CFLAGS += -DUSE_DOME_PLATFORM=1
endif

ifeq ($(USE_NO_HWNAT_FILTER_MARK),y)
CFLAGS += -DUSE_NO_HWNAT_FILTER_MARK=1
endif

ifeq ($(USE_CHANGE_LOCAL_IP_BY_WAN_SUBNET),y)
CFLAGS += -DUSE_CHANGE_LOCAL_IP_BY_WAN_SUBNET=1
endif

ifeq ($(USE_DHD_MODULE),y)
CFLAGS += -DUSE_DHD_MODULE=1
endif

ifeq ($(USE_HDD_PWR_CONTROL),y)
CFLAGS += -DUSE_HDD_PWR_CONTROL=1
endif

ifeq ($(USE_SYSINFO),y)
CFLAGS += -DUSE_SYSINFO=1
endif

ifeq ($(USE_AFP),y)
CFLAGS += -DUSE_AFP=1
endif

ifeq ($(USE_CONVERT_IPPOOL),y)
CFLAGS += -DUSE_CONVERT_IPPOOL=1
endif

ifeq ($(USE_REMOVE_NF_OLD_DB_STRUCTURE),y)
CFLAGS += -DUSE_REMOVE_NF_OLD_DB_STRUCTURE=1
endif

ifeq ($(USE_UTF8),y)
CFLAGS += -DUSE_UTF8=1
endif

ifeq ($(USE_WIRELESSCONF_V2),y)
CFLAGS += -DUSE_WIRELESSCONF_V2=1
endif

ifeq ($(USE_BOOT_CONFIG_KT_FLAG),y)
CFLAGS += -DUSE_BOOT_CONFIG_KT_FLAG=1
endif

ifeq ($(USE_PERIODIC_CHECK),y)
CFLAGS += -DUSE_PERIODIC_CHECK=1
endif

ifeq ($(USE_SNPRINTF2), y)
CFLAGS += -DUSE_SNPRINTF2
endif

ifeq ($(USE_IUX_TEST),y)
CFLAGS += -DUSE_IUX_TEST=1
endif

ifeq ($(USE_BCM_COMPRESSED_NVRAM),y)
CFLAGS += -DUSE_BCM_COMPRESSED_NVRAM=1
endif

ifeq ($(USE_BCM_WPSMONITOR_RESTART),y)
CFLAGS += -DUSE_BCM_WPSMONITOR_RESTART=1
endif

ifeq ($(USE_STATIC_LEASE_DESC),y)
CFLAGS += -DUSE_STATIC_LEASE_DESC=1
endif

ifeq ($(USE_IUX),y)
CFLAGS += -DUSE_IUX=1
endif

ifeq ($(USE_IUX_PACKAGE),y)
CFLAGS += -DUSE_IUX_PACKAGE=1
endif

ifeq ($(USE_WIFI_EXTENDER_MOBILE_UI),y)
CFLAGS += -DUSE_WIFI_EXTENDER_MOBILE_UI=1
endif

ifeq ($(USE_BCM_EMBEDDED_WLTEST),y)
CFLAGS += -DUSE_BCM_EMBEDDED_WLTEST=1
endif

ifeq ($(USE_FTM_FLAG_NOT_IN_BOOT),y)
CFLAGS += -DUSE_FTM_FLAG_NOT_IN_BOOT=1
endif

ifeq ($(USE_NO_REBOOT_FOR_INVALID_FIRMWARE),y)
CFLAGS += -DUSE_NO_REBOOT_FOR_INVALID_FIRMWARE=1
endif

ifeq ($(USE_QA_TEST_FIRMWARE),y)
CFLAGS += -DUSE_QA_TEST_FIRMWARE=1
endif

ifeq ($(USE_LED_DIAG),y)
CFLAGS += -DUSE_LED_DIAG=1
endif

ifeq ($(USE_MACNO_WIFI_PASSWORD),y)
CFLAGS += -DUSE_MACNO_WIFI_PASSWORD=1
endif

ifeq ($(USE_WIFI_EXTENDER_DAEMON),y)
CFLAGS += -DUSE_WIFI_EXTENDER_DAEMON=1
endif

ifeq ($(USE_EXTENDER_GPIOCTL_DAEMON),y)
CFLAGS += -DUSE_EXTENDER_GPIOCTL_DAEMON=1
endif

ifeq ($(USE_EXTENDER_BACKGROUND_SCAN),y)
CFLAGS += -DUSE_EXTENDER_BACKGROUND_SCAN=1
endif

ifeq ($(USE_RTL_SDK_25),y)
CFLAGS += -DUSE_RTL_SDK_25=1
endif

ifeq ($(USE_OEM_PROFILE),y)
CFLAGS += -DUSE_OEM_PROFILE=1
endif

ifeq ($(USE_EASY_ROUTER_SETUP),y)
CFLAGS += -DUSE_EASY_ROUTER_SETUP=1
endif

ifeq ($(USE_EASY_ROUTER_SETUP_UI),y)
CFLAGS += -DUSE_EASY_ROUTER_SETUP_UI=1
endif

ifeq ($(USE_RTL8196E_LINK_REFRESH_WORKAROUND),y)
CFLAGS += -DUSE_RTL8196E_LINK_REFRESH_WORKAROUND=1
endif

ifeq ($(USE_EXTENDER_DUAL_LED_SPEC),y)
CFLAGS += -DUSE_EXTENDER_DUAL_LED_SPEC=1
endif


ifeq ($(USE_MTK_GPIO),y)
CFLAGS += -DUSE_MTK_GPIO=1
endif

ifeq ($(USE_EMMC),y)
CFLAGS += -DUSE_EMMC=1
endif

ifeq ($(USE_NF_CT_MAN_PROTO_32BIT),y)
CFLAGS += -DUSE_NF_CT_MAN_PROTO_32BIT=1
endif

ifeq ($(USE_NETFILTER_QUEUE),y)
CFLAGS += -DUSE_NETFILTER_QUEUE=1
endif

ifeq ($(USE_COMMON_CONFIG_API),y)
CFLAGS += -DUSE_COMMON_CONFIG_API=1
endif

ifeq ($(USE_MTK_TXBF_MUMIMO_UI),y)
CFLAGS += -DUSE_MTK_TXBF_MUMIMO_UI=1
endif

ifeq ($(USE_WL_MASS_TEST),y)
CFLAGS += -DUSE_WL_MASS_TEST=1
endif

ifeq ($(USE_MTK_TKIPAES_WORKAROUND),y)
CFLAGS += -DUSE_MTK_TKIPAES_WORKAROUND=1
endif

ifeq ($(USE_IUXPC),y)
CFLAGS += -DUSE_IUXPC=1
endif

ifeq ($(USE_MBRIDGE_STATUS_DAEMON),y)
CFLAGS += -DUSE_MBRIDGE_STATUS_DAEMON=1
endif

ifeq ($(USE_GET_APLIST_FAILOVER),y)
CFLAGS += -DUSE_GET_APLIST_FAILOVER=1
endif

ifeq ($(USE_EGYPT_CONFIG),y)
CFLAGS += -DUSE_EGYPT_CONFIG=1
endif

ifeq ($(USE_A2004NS_V4),y)
CFLAGS += -DUSE_A2004NS_V4=1
endif

ifeq ($(USE_MTK_TXBF_CAL_UI),y)
CFLAGS += -DUSE_MTK_TXBF_CAL_UI=1
endif

ifeq ($(USE_MTK_EEPROM_CONTROL_FOR_REGULATION),y)
CFLAGS += -DUSE_MTK_EEPROM_CONTROL_FOR_REGULATION=1
endif

ifeq ($(USE_MULTI_LANG),y)
CFLAGS += -DUSE_MULTI_LANG=1
endif

ifeq ($(USE_SERVICE_FOLDER),y)
CFLAGS += -DUSE_SERVICE_FOLDER=1
endif

ifeq ($(USE_COMPRESSED_JS),y)
CFLAGS += -DUSE_COMPRESSED_JS=1
endif

ifeq ($(USE_EXTENDER2_LED_SPEC),y)
CFLAGS += -DUSE_EXTENDER2_LED_SPEC=1
endif

ifeq ($(USE_BCM_PHY_WATCHDOG_BY_REGULATION),y)
CFLAGS += -DUSE_BCM_PHY_WATCHDOG_BY_REGULATION=1
endif

ifeq ($(USE_RTL_SDK_3411B),y)
CFLAGS += -DUSE_RTL_SDK_3411B=1
endif

ifeq ($(USE_BCM_GMAC3),y)
CFLAGS += -DUSE_BCM_GMAC3=1
endif

ifeq ($(USE_WIFI_EXTENDER_EXT_CHECKING),y)
CFLAGS += -DUSE_WIFI_EXTENDER_EXT_CHECKING=1
endif

ifeq ($(PREVENT_FLASH_4MB_DOWNGRADE),y)
CFLAGS += -DPREVENT_FLASH_4MB_DOWNGRADE=1
endif

ifeq ($(USE_TOTOLINK_A3_REQUEST),y)
CFLAGS += -DUSE_TOTOLINK_A3_REQUEST=1
endif

ifeq ($(USE_FACTORY_SECTION),y)
CFLAGS += -DUSE_FACTORY_SECTION=1
endif

ifeq ($(USE_KERNEL_3_X),y)
CFLAGS += -DUSE_KERNEL_3_X=1
endif

ifeq ($(USE_EXTENDER_N2_LED),y)
CFLAGS += -DUSE_EXTENDER_N2_LED=1
endif

ifeq ($(USE_RTL8194AR),y)
CFLAGS += -DUSE_RTL8194AR=1
endif

ifeq ($(USE_BCM_CONFIG_REGION_SIZE_WORKAROUND),y)
CFLAGS += -DUSE_BCM_CONFIG_REGION_SIZE_WORKAROUND=1
endif

ifeq ($(USE_RTL_8309M),y)
CFLAGS += -DUSE_RTL_8309M=1
endif

ifeq ($(USE_QCA_REFERENCE_DRIVER),y)
CFLAGS += -DUSE_QCA_REFERENCE_DRIVER=1
endif

ifeq ($(USE_STA_WDS),y)
CFLAGS += -DUSE_STA_WDS=1
endif

ifeq ($(USE_SEND_AUTH2),y)
CFLAGS += -DUSE_SEND_AUTH2=1
endif

ifeq ($(USE_NO_MTU),y)
CFLAGS += -DUSE_NO_MTU=1
endif

ifeq ($(USE_NO_WL_RTS_FRAG),y)
CFLAGS += -DUSE_NO_WL_RTS_FRAG=1
endif

ifeq ($(USE_CALINDEX_ZERO_FOR_REG),y)
CFLAGS += -DUSE_CALINDEX_ZERO_FOR_REG=1
endif

ifeq ($(USE_MTK_DBDC),y)
CFLAGS += -DUSE_MTK_DBDC=1
endif

ifeq ($(USE_QCA_MUMIMO_UI),y)
CFLAGS += -DUSE_QCA_MUMIMO_UI=1
endif

ifeq ($(USE_RTL_MUMIMO_UI),y)
CFLAGS += -DUSE_RTL_MUMIMO_UI=1
endif

ifeq ($(USE_DHCPD_PATCH_FOR_EXTENDER),y)
CFLAGS += -DUSE_DHCPD_PATCH_FOR_EXTENDER=1
endif

ifeq ($(USE_SYSCONFIG_SECTOR),y)
# Bootconfig & system paramters save divided sector. Not in bootloader
CFLAGS += -DUSE_SYSCONFIG_SECTOR=1
endif

ifeq ($(USE_USB_PLUGOUT_WORKAROUND),y)
CFLAGS += -DUSE_USB_PLUGOUT_WORKAROUND=1
endif

ifeq ($(USE_MTK_TPC_PATCH),y)
CFLAGS += -DUSE_MTK_TPC_PATCH=1
endif

ifeq ($(USE_EXTENDER_UX),y)
CFLAGS += -DUSE_EXTENDER_UX=1
endif

ifeq ($(USE_NOWSON_REQUEST),y)
CFLAGS += -DUSE_NOWSON_REQUEST=1
endif

ifeq ($(USE_BAND_STEERING),y)
CFLAGS += -DUSE_BAND_STEERING=1
endif

ifeq ($(USE_DONT_TRY_OTHER_TIME_SERVER),y)
CFLAGS += -DUSE_DONT_TRY_OTHER_TIME_SERVER=1
endif
