# udhcp makefile

prefix=/usr
SBINDIR=/sbin
USRSBINDIR=${prefix}/sbin
USRBINDIR=${prefix}/bin
USRSHAREDIR=${prefix}/share

# Uncomment this to get a shared binary. Call as udhcpd for the server,
# and udhcpc for the client
COMBINED_BINARY=1

# Uncomment this for extra output and to compile with debugging symbols
#DEBUG=1

# Uncomment this to output messages to syslog, otherwise, messages go to stdout
CFLAGS += -DSYSLOG

#CROSS_COMPILE=arm-uclibc-
#CC = $(CROSS_COMPILE)gcc
#LD = $(CROSS_COMPILE)LD
include $(LINOS_APP_ROOT)/mkdefs

INSTALL = install

VER := 0.9.8


OBJS_SHARED = options.o socket.o packet.o pidfile.o
DHCPD_OBJS = dhcpd.o arpping.o files.o leases.o serverpacket.o
DHCPC_OBJS = dhcpc.o clientpacket.o script.o

ifdef COMBINED_BINARY
EXEC1 = dhcpd
OBJS1 = $(DHCPD_OBJS) $(DHCPC_OBJS) $(OBJS_SHARED) frontend.o
CFLAGS += -DCOMBINED_BINARY
else
EXEC1 = dhcpd
OBJS1 = $(DHCPD_OBJS) $(OBJS_SHARED)

EXEC2 = udhcpc
OBJS2 = $(DHCPC_OBJS) $(OBJS_SHARED)
endif

EXEC3 = dumpleases
OBJS3 = dumpleases.o

BOOT_PROGRAMS = udhcpc
DAEMONS = dhcpd
COMMANDS = dumpleases

ifdef SYSLOG
CFLAGS += -DSYSLOG
endif

CFLAGS += -W -Wall -Wstrict-prototypes -DVERSION='"$(VER)"'


DHCPLIB_SRC := dhcplib.c 
DHCPLIB_OBJ := \
	get_pattern_boundary.o \
	dhcplib_set_dns_server.o \
	get_domain_name_server.o \
	dhcplib_set_range_and_gateway.o \
	dhcplib_get_range_and_gateway.o \
	dhcplib_get_active_lease_count.o \
	dhcplib_get_lease_info.o \
	dhcpd_start.o \
	dhcpd_stop.o \
	compare_domain_name_server.o \
	determine_dhcpd_restart.o \
	dhcplib_flush_dhcpd_leases.o \
	get_internal_network_info.o \
	set_domain_name_server.o \
	dhcplib_get_dns_server.o \
	dhcplib_static_leases.o \
	dhcplib_get_active_static_lease_count.o \
	dhcplib_get_static_lease_info.o \
	get_lease_info.o

DHCP_LIB := dhcplib.a
LIBS := $(DHCP_LIB) $(CGI_LIB)

all: $(DHCPLIB_OBJ) $(DHCP_LIB) $(EXEC1) $(EXEC2)

$(OBJS1) $(OBJS2) $(OBJS3): *.h Makefile
$(EXEC1) $(EXEC2) $(EXEC3): Makefile

$(DHCPLIB_OBJ) : $(DHCPLIB_SRC)
	$(CC) $(CFLAGS) -DL_$* $< -c -o $*.o
	$(STRIPTOOL) -x -R .note -R .comment $*.o
	
$(DHCP_LIB) : $(DHCPLIB_OBJ)
	$(AR) $(ARFLAGS) $(DHCP_LIB) $(DHCPLIB_OBJ)
	
.c.o:
	$(CC) -c $(CFLAGS) $<
	
$(EXEC1): $(OBJS1)
	$(LD) $(LDFLAGS) -o $(EXEC1).elf $(LIBCDIR)/crt0.o $(OBJS1) $(LIBS) $(LIBRARIES)
	$(STRIP) $(EXEC1).elf
	$(CONVERT) -o $(EXEC1) -p $(EXEC1).elf

$(EXEC2): $(OBJS2)
	$(LD) $(LDFLAGS) -o $(EXEC2).elf $(LIBCDIR)/crt0.o $(OBJS2) $(LIBS) $(LIBRARIES) 
	$(STRIP) $(EXEC1).elf
	$(CONVERT) -o $(EXEC2) -p $(EXEC2).elf

$(EXEC3): $(OBJS3)
	$(LD) $(LDFLAGS) -o $(EXEC3).elf $(LIBCDIR)/crt0.o $(OBJS3) $(LIBRARIES)
	$(STRIP) $(EXEC3).elf
	$(CONVERT) -o $(EXEC3) -p $(EXEC3).elf

install: all

	$(INSTALL) $(DAEMONS) $(USRSBINDIR)
	$(INSTALL) $(COMMANDS) $(USRBINDIR)
ifdef COMBINED_BINARY
	ln -sf $(USRSBINDIR)/$(DAEMONS) $(SBINDIR)/$(BOOT_PROGRAMS)
else
	$(INSTALL) $(BOOT_PROGRAMS) $(SBINDIR)
endif
	mkdir -p $(USRSHAREDIR)/udhcpc
	for name in bound deconfig renew script ; do \
		$(INSTALL) samples/sample.$$name \
			$(USRSHAREDIR)/udhcpc/default.$$name ; \
	done
	mkdir -p $(USRSHAREDIR)/man/man1
	$(INSTALL) dumpleases.1 $(USRSHAREDIR)/man/man1
	mkdir -p $(USRSHAREDIR)/man/man5
	$(INSTALL) udhcpd.conf.5 $(USRSHAREDIR)/man/man5
	mkdir -p $(USRSHAREDIR)/man/man8
	$(INSTALL) udhcpc.8 udhcpd.8 $(USRSHAREDIR)/man/man8

clean:
	-rm -f dhcpd udhcpc dumpleases *.o core *.a *.elf

