# udhcp makefile

prefix=/usr
SBINDIR=/sbin
USRSBINDIR=${prefix}/sbin
USRBINDIR=${prefix}/bin
USRSHAREDIR=${prefix}/share

include $(USERAPPS_ROOT)/mkdefs

# Uncomment this to get a shared binary. Call as udhcpd for the server,
# and udhcpc for the client
ifeq ($(USE_UDHCPC),y)
COMBINED_BINARY=1
endif

# Uncomment this for extra output and to compile with debugging symbols
#DEBUG=1

# Uncomment this to output messages to syslog, otherwise, messages go to stdout

#CROSS_COMPILE=arm-uclibc-
#CC = $(CROSS_COMPILE)gcc
#LD = $(CROSS_COMPILE)LD


CFLAGS += -DSYSLOG
INSTALL = install

VER := 0.9.8


OBJS_SHARED = options.o socket.o packet.o pidfile.o
DHCPD_OBJS = dhcpd.o arpping.o files.o
ifeq ($(USE_LGDACOM),y)
DHCPD_OBJS += serverpacket_lgdacom.o leases_lgdacom.o
else
DHCPD_OBJS += serverpacket.o leases.o
endif

ifeq ($(USE_PHILTEC_OPTION),y)
ifeq ($(USE_PORTFORWARD_V2),y)
DHCPD_OBJS += philtec_v2.o
else
DHCPD_OBJS += philtec.o
endif
endif

ifeq ($(USE_SKT_SEMO_OPTION),y)
DHCPD_OBJS += skt_semo.o
endif

DHCPC_OBJS = dhcpc.o clientpacket.o script.o

ifdef COMBINED_BINARY
EXEC1 = dhcpd
OBJS1 = $(DHCPD_OBJS) $(DHCPC_OBJS) $(OBJS_SHARED) frontend.o
CFLAGS += -DCOMBINED_BINARY
else
EXEC1 = dhcpd
OBJS1 = $(DHCPD_OBJS) $(OBJS_SHARED)

EXEC2 = udhcpc
OBJS2 = $(DHCPC_OBJS) $(OBJS_SHARED)
endif

EXEC3 = dumpleases
OBJS3 = dumpleases.o

BOOT_PROGRAMS = udhcpc
DAEMONS = dhcpd
COMMANDS = dumpleases

ifdef SYSLOG
CFLAGS += -DSYSLOG
endif

CFLAGS += -W -Wall -Wstrict-prototypes -DVERSION='"$(VER)"'
CFLAGS += -I$(USERAPPS_ROOT)/cgi-src/lib

DHCPLIB_SRC := dhcplib.c 
DHCPLIB_OBJ := \
	get_pattern_boundary.o \
	dhcplib_set_dns_server.o \
	dhcplib_set_range_and_gateway.o \
	dhcplib_get_range_and_gateway.o \
	dhcplib_get_active_lease_count.o \
	dhcplib_get_lease_info.o \
	dhcpd_start.o \
	dhcpd_stop.o \
	compare_domain_name_server.o \
	determine_dhcpd_restart.o \
	dhcplib_flush_dhcpd_leases.o \
	dhcplib_get_dns_server.o \
	dhcplib_static_leases.o \
	dhcplib_get_active_static_lease_count.o \
	dhcplib_get_static_lease_info.o  \
	get_lease_info.o \
	dhcplib_search_static_lease.o \
	dhcplib_flush_static_lease.o \
	dhcplib_get_dhcp_server_mac.o \
	dhcplib_get_mac_by_ip.o \
	dhcplib_search_lease_by_ip.o

DHCP_LIB := dhcplib.a

#ifeq ($(USE_NEW_LIB),y)
#DHCP_LIB:= dhcplib.a
#DHCPLIB_SRC := new_dhcplib.c 
#DHCPLIB_OBJ := \
#	       dhcpd_read_config.o dhcpd_commit_config.o dhcpd_set_dns.o dhcpd_start.o dhcpd_stop.o \
#	       dhcpd_get_all_static_lease.o dhcpd_set_all_static_lease.o dhcpd_search_static_lease.o dhcpd_add_static_lease.o \
#	       dhcpd_remove_static_lease.o dhcpd_flush_static_lease.o dhcpd_flush_dynamic_lease.o dhcpd_get_all_dynamic_lease.o \
#	       dhcpd_get_dynamic_lease.o dhcpd_set_op.o dhcpd_get_op.o init_dhcpd.o update_udhcpd_config.o dhcplib_get_dhcp_server_mac.o
#endif


ifeq ($(USE_NEW_LIB),y)
LIBS :=  $(CGI_LIB) 
#LIBS :=  $(DHCP_LIB) $(USERLAND_LIB) 
else
LIBS :=  $(DHCP_LIB) $(CGI_LIB) 
endif

ifeq ($(USE_NEW_LIB),y)
TARGET = $(DHCPLIB_OBJ) $(EXEC1) $(EXEC2) $(EXEC3)
else
TARGET = $(DHCPLIB_OBJ) $(DHCP_LIB) $(EXEC1) $(EXEC2) $(EXEC3)
endif

all: $(TARGET)
# all: $(DHCPLIB_OBJ) $(EXEC1) $(EXEC2) $(EXEC3)

$(OBJS1) $(OBJS2) $(OBJS3): *.h Makefile
$(EXEC1) $(EXEC2) $(EXEC3): Makefile

$(DHCPLIB_OBJ) : $(DHCPLIB_SRC)
	$(CC) $(CFLAGS) -DL_$* $< -c -o $*.o
	$(STRIPTOOL) -x -R .note -R .comment $*.o
	
ifneq ($(USE_NEW_LIB),y)
$(DHCP_LIB) : $(DHCPLIB_OBJ)
	$(AR) $(ARFLAGS) $(DHCP_LIB) $(DHCPLIB_OBJ)
endif
	
.c.o:
	$(CC) -c $(CFLAGS) $<
	
$(EXEC1): $(OBJS1)
	$(CC) $(LDFLAGS) -o $(EXEC1) $(OBJS1) $(LIBS)
	$(STRIPTOOL) --remove-section=.note --remove-section=.comment $(EXEC1)

$(EXEC2): $(OBJS2)
	$(CC) $(LDFLAGS) -o $(EXEC2) $(OBJS2) $(LIBS)
	$(STRIPTOOL) --remove-section=.note --remove-section=.comment $(EXEC2)

$(EXEC3): $(OBJS3)
	$(CC) $(LDFLAGS) -o $(EXEC3) $(OBJS3)
	$(STRIPTOOL) --remove-section=.note --remove-section=.comment $(EXEC3)

install: all

	$(INSTALL) $(DAEMONS) $(USRSBINDIR)
	$(INSTALL) $(COMMANDS) $(USRBINDIR)
ifdef COMBINED_BINARY
	ln -sf $(USRSBINDIR)/$(DAEMONS) $(SBINDIR)/$(BOOT_PROGRAMS)
else
	$(INSTALL) $(BOOT_PROGRAMS) $(SBINDIR)
endif
	mkdir -p $(USRSHAREDIR)/udhcpc
	for name in bound deconfig renew script ; do \
		$(INSTALL) samples/sample.$$name \
			$(USRSHAREDIR)/udhcpc/default.$$name ; \
	done
	mkdir -p $(USRSHAREDIR)/man/man1
	$(INSTALL) dumpleases.1 $(USRSHAREDIR)/man/man1
	mkdir -p $(USRSHAREDIR)/man/man5
	$(INSTALL) udhcpd.conf.5 $(USRSHAREDIR)/man/man5
	mkdir -p $(USRSHAREDIR)/man/man8
	$(INSTALL) udhcpc.8 udhcpd.8 $(USRSHAREDIR)/man/man8

clean:
	-rm -f dhcpd udhcpc dumpleases *.o core *.a

